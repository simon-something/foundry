rd_("DiThe maximum number of rejects via <code>vm.assume</code> which can be \xe2\x80\xa60CnThe maximum number of combined inputs that may be rejected \xe2\x80\xa600EcClones the data of the given <code>accounts</code> from the <code>active</code> \xe2\x80\xa6EhWhenever a call is made to <code>callee</code> with calldata <code>data</code>, this \xe2\x80\xa600000BcModifies the context configuration.0AoCreate new selfdestruct revert.0CnCreate a new EVM instance with a given context, inspector, \xe2\x80\xa60ClUtility cheatcode to remove any EIP-2930 access list set \xe2\x80\xa600000BkExplicitly disables the use of RPC caching.0AhDisables storage caching1BbDisables storage caching entirely.000002CiDisables storage caching entirely. This overrides any \xe2\x80\xa6111BlCheck if any defaults need to be normalized.DiInserts the result of the <code>call</code> function with a reference \xe2\x80\xa6CkEnsures a value is in the entry by inserting, if empty, \xe2\x80\xa610BkWhether <code>stdout</code> supports color.EeParses the given <code>string</code> into an <code>address</code>. Container type \xe2\x80\xa600000EhParses the given <code>string</code> into a <code>bytes32</code>. Container type for \xe2\x80\xa600000EhParses a string of JSON data at <code>key</code> and coerces it to <code>bytes</code>\xe2\x80\xa600000DfParses a string of JSON data at <code>key</code> and coerces it to \xe2\x80\xa600000EhParses a string of TOML data at <code>key</code> and coerces it to <code>bytes</code>\xe2\x80\xa600000DfParses a string of TOML data at <code>key</code> and coerces it to \xe2\x80\xa600000AgParses a config profileCnPauses collection of call traces. Useful in cases when you \xe2\x80\xa600000DdReturns the full pending block with <code>Transaction</code> objectsDeFactory used by <code>anvil</code> to extend the EVM\xe2\x80\x99s precompiles.BaPrecompiles to inject to the EVM.01ChCollects the data we need for simulation and various \xe2\x80\xa6CnIn cases when user moves/renames/deletes structs, compiler \xe2\x80\xa6DeSets <code>block.prevrandao</code>. Not available on EVM versions \xe2\x80\xa600000000000CbMax priority fee per gas for EIP1559 transactions.00CdReturns the width used by progress bars for the tty.CkPrompts the user for a hidden string value in the terminal.00000CgReturns a random fixed-size byte array of length 4. \xe2\x80\xa600000CgReturns a random fixed-size byte array of length 8. \xe2\x80\xa600000CjReturns a random uint256 value. Container type for the \xe2\x80\xa600000CkReturns random uint256 value between the provided range \xe2\x80\xa600000DhReturns a random <code>uint256</code> value of given bits. Container \xe2\x80\xa600000DdReads the entire content of file as binary. <code>path</code> is \xe2\x80\xa600000CmReturns an iterator that yields all transactions that are \xe2\x80\xa6CeReturns an iterator over transactions that are ready.BoReturns the rlp header for the receipt payload.CjRestore the order of the params of a decoded event, as \xe2\x80\xa6CdWhether storage access recording is currently active000000ClWhether to include the version requirement string in the \xe2\x80\xa6CiDerive a set number of wallets from a mnemonic at the \xe2\x80\xa600000CiDerive a set number of wallets from a mnemonic in the \xe2\x80\xa600000BoRender a collection of call traces to a string.00AmReturn with the given output.0CkTransfers transaction fees to the block beneficiary\xe2\x80\x99s \xe2\x80\xa60BnRewards the beneficiary with transaction fees.110DbCreate a new byte array from the given slice <code>src</code>, \xe2\x80\xa6DoCreate a new <code>FixedBytes</code> from the given slice <code>src</code>, \xe2\x80\xa6111011CkInstantiate an unchecked seal. This should be used with \xe2\x80\xa60CkSee <code>serializeJson</code>. Function with signature \xe2\x80\xa600000000000CiSet blockhash for the current block. It only sets the \xe2\x80\xa600000CgSets the nonce of an account to an arbitrary value. \xe2\x80\xa600000CeSets bytecode with hash. Assume that account is warm.BeSet code and its hash to the account.111011AjSets prune history status.BiSets address info of BundleState reverts.0BiSets storage info of BundleState reverts.0CcSetups a new local forge project by cloning and \xe2\x80\xa6DdRemove and return the key-value pair equivalent to <code>key</code>.CkRemove and return the key, value pair stored in the map \xe2\x80\xa6001000BbRemove the key-value pair by indexAiRemove the value by index10CeWhether to collect and display edge coverage metrics.0AgSigns data via EIP-712.ChSigns data via EIP-712, and includes full support of \xe2\x80\xa6ClDo the callback and return the result on the buffer as a \xe2\x80\xa6ChDon\xe2\x80\x99t add any additional derives to generated bindingsB`Loads storage slot with account.0CnSort the map\xe2\x80\x99s key-value pairs in place using a sort-key \xe2\x80\xa6CkSort the set\xe2\x80\x99s values in place using a key extraction \xe2\x80\xa610ClSort the map\xe2\x80\x99s key-value pairs by the default ordering \xe2\x80\xa60CmSort the key-value pairs of the map and return a by-value \xe2\x80\xa6CmSort the values of the set and return a by-value iterator \xe2\x80\xa610CmReturns the total amount of gas spent, minus the refunded \xe2\x80\xa60ChSplits a bit-slice at an index, without bounds checking.0DhSets all subsequent calls\xe2\x80\x99 <code>msg.sender</code> to be the input \xe2\x80\xa600000000000DkSets all subsequent delegate calls\xe2\x80\x99 <code>msg.sender</code> to be the \xe2\x80\xa600000000000CbRemoves the account that from the impersonated set0CkReturns the total number of storage keys in this access \xe2\x80\xa60DbWhether to remove comments when inspecting <code>ir</code> and \xe2\x80\xa6BjAll struct definitions within the contractBeSwaps the contents of two bit-slices.0BgThe targeted functions of the contract.00BoPath where last test run failures are recorded.BbReturns the kind of test function.CmEncodes an Ethereum address to its EIP-55 checksum into a \xe2\x80\xa60BeConvert a TOML value to a JSON value.CdTouch empty account, related to EIP-161 state clear.0BbTransition account representation.0DoAttempts to construct an exclusive <code>&amp;mut BitSlice</code> reference \xe2\x80\xa60CmTry to apply a callback to a single line. If the callback \xe2\x80\xa6CmTries to fill this fixed byte array with the given random \xe2\x80\xa6DkTries to fill this <code>FixedBytes</code> with the given random number \xe2\x80\xa6111011DeExecutes a <code>Watchexec</code> that listens for changes in the \xe2\x80\xa6EgReturns a new <code>SharedBackend</code> and the <code>BackendHandler</code> with a \xe2\x80\xa6000BjMakes transitions and update bundle state.0DgCreates a new <code>AccountInfo</code> with the given code and code \xe2\x80\xa60DgSets the <code>fork_chain_id</code> to use to fork off local cache fromEdConfigures the <code>Tracer</code> <code>revm::Inspector</code> with a log collectorAiCreates the pending blockC`Enables steps recording for <code>Tracer</code>.BdSets whether to enable steps tracingClConvenience function that overrides the configured block \xe2\x80\xa6000EdConfigures the <code>Tracer</code> <code>revm::Inspector</code> with a trace printerClWrite a comment line that might potentially overflow the \xe2\x80\xa6ChGas cost for accessing an address in the access list \xe2\x80\xa60CkAn Inspector that collects touched accounts and storage \xe2\x80\xa600CiNumber of bits to set per input in Ethereum bloom filter.0BnBn128 pair precompile with BYZANTIUM gas rules0AfBytecode decode errors0CkMarks whether this type contains mutability permissions \xe2\x80\xa60B`Comment with additional metadataCbCLI arguments for <code>cast creation-args</code>.DeA compatibility helper type to use common <code>RpcHandler</code> \xe2\x80\xa6BfThe contract inheritance preprocessor.CmThe contract inheritance output. The map of contract base \xe2\x80\xa601ClWrapper type that maps an artifact to a contract ABI and \xe2\x80\xa6CcTo deploy a contract to the Ethereum network, a \xe2\x80\xa6BbRemoves transactions from the poolBcEIP-7702 magic number in array form0AjEIP-1559 is not supported.0AjEIP-2930 is not supported.0AjEIP-4844 is not supported.0AjEIP-7702 is not supported.0AjEIP-7873 is not supported.0CjPolling method for a filter, which returns an array of \xe2\x80\xa6CmA trace identifier that tries to identify addresses using \xe2\x80\xa6000CgSet the exact gas limit that you want in the next blockCm<code>excess_blob_gas</code> is not set for Cancun and above.0CiRepresents an executed transaction (transacted on the DB)BfTracks the expected calls per address.000DcHandles expected emits specified by the <code>expectEmit</code> \xe2\x80\xa6BlA single item in the whole fee history cacheCiA miner that\xe2\x80\x99s supposed to create a new block every \xe2\x80\xa6CmA Provider that ensures all keys are snake case if they\xe2\x80\x99\xe2\x80\xa6BeRepresents a snapshot of the database000BgFormats a string into bytes32 encoding.CmG1_ADD_BASE_GAS_FEE specifies the amount of gas needed to \xe2\x80\xa60CnG1_ADD_INPUT_LENGTH specifies the number of bytes that the \xe2\x80\xa60ChG1_MSM_BASE_GAS_FEE specifies the base amount of gas \xe2\x80\xa60CjG1_MSM_INPUT_LENGTH specifies the number of bytes that \xe2\x80\xa60CmG2_ADD_BASE_GAS_FEE specifies the amount of gas needed to \xe2\x80\xa60CnG2_ADD_INPUT_LENGTH specifies the number of bytes that the \xe2\x80\xa60ChG2_MSM_BASE_GAS_FEE specifies the base amount of gas \xe2\x80\xa60CjG2_MSM_INPUT_LENGTH specifies the number of bytes that \xe2\x80\xa60DaThe error type returned by <code>get_disjoint_indices_mut</code>.0DaContainer for all the <code>IInvariantTest</code> function calls.00BmRepresents the complete state of single blockBfAll used inpectors besides Cheatcodes.AlStores instructions for EVM.0ClTransaction account does not have enough amount of ether \xe2\x80\xa60Cnused only for pre spurious dragon hardforks where existing \xe2\x80\xa60BmHelper trait to reset the DB if it\xe2\x80\x99s forkedAaMocked call data.CgA multi contract runner receives a set of contracts \xe2\x80\xa6CiList of signatures for a given <code>SelectorKind</code>.DgOption for <code>BundleState</code> when converting it to the plain \xe2\x80\xa600000DdOtterscan\xe2\x80\x99s <code>ots_traceTransaction</code> endpoint Trace a \xe2\x80\xa6CiPAIRING_OFFSET_BASE specifies the y-intercept for the \xe2\x80\xa60CdHeaders and separator for rendering parameter table.CkA waiting pool of transaction that are pending, but not \xe2\x80\xa6CnHelper type to periodically dump the state of the chain to \xe2\x80\xa6E`A <code>RpcHandler</code> that expects <code>EthRequest</code> rpc calls and \xe2\x80\xa6CjGiven a TestRunner and a strategy, it generates calls. \xe2\x80\xa6000DhA raw view into an occupied entry in an <code>IndexMap</code>. It is \xe2\x80\xa60CnOut of gas error encountered while checking for reentrancy \xe2\x80\xa60CgRpc endpoint with environment variables resolved to \xe2\x80\xa60CjStandalone sections in the config which get integrated \xe2\x80\xa6BdThe standard cost of calldata token.0EaA <code>BuildHasher</code> for <code>fast::FoldHasher</code> that is randomly \xe2\x80\xa6EdA <code>BuildHasher</code> for <code>quality::FoldHasher</code> that is randomly \xe2\x80\xa610BjIf account is marked for self destruction.0B`How to send a single transactionBcConfiguration for the SessionSourceBlDisk representation of the signatures cache.B`A signed EIP-7702 authorization.0CgA lazy iterator producing elements in the symmetric \xe2\x80\xa6000DhExtension of the <code>SystemCallEvm</code> trait that adds a method \xe2\x80\xa600000CaPrefix for auto-generated type bindings using \xe2\x80\xa6CeHelper trait to easily convert results to rpc resultsBhAn executor for a series of transactionsBoMetric value for the priority of a transaction.BhFailed to send transaction, See also \xe2\x80\xa6BcA failure to parse a Chisel CommandAnWarning: Unused local variableCgContainer with data required for contract verification.BbWraps a profile in another profileBdDecodes the calldata of the functionCnThe active EIP-4844 blob that will be attached to the next \xe2\x80\xa6000000BjThe group and name of the active snapshot.CaBuilds mapping with additional settings profiles.CgIn forking mode, explicitly grant the given address \xe2\x80\xa600000CmTurn on call traces for transactions that are returned to \xe2\x80\xa6CbReturns true if auto mining is enabled, and false.CnEnables or disables, based on the single boolean argument, \xe2\x80\xa6CmAccess the underlying store as a little-endian bytes with \xe2\x80\xa60CmViews the bit-slice as a half-open range of write-capable \xe2\x80\xa60CmAsserts that the given condition is false. Container type \xe2\x80\xa600000CjAsserts that the given condition is false and includes \xe2\x80\xa600000DkAsserts that two <code>bool</code> values are not equal. Container type \xe2\x80\xa600000DhAsserts that two <code>bool</code> values are not equal and includes \xe2\x80\xa600000DiAsserts that two <code>uint256</code> values are not equal. Container \xe2\x80\xa600000DkAsserts that two <code>uint256</code> values are not equal and includes \xe2\x80\xa600000DhAsserts that two <code>int256</code> values are not equal. Container \xe2\x80\xa600000DjAsserts that two <code>int256</code> values are not equal and includes \xe2\x80\xa600000DiAsserts that two <code>address</code> values are not equal. Container \xe2\x80\xa600000DkAsserts that two <code>address</code> values are not equal and includes \xe2\x80\xa600000DiAsserts that two <code>bytes32</code> values are not equal. Container \xe2\x80\xa600000DkAsserts that two <code>bytes32</code> values are not equal and includes \xe2\x80\xa600000DnAsserts that the <code>&lt;root&gt;/cache/sol-files-cache.json</code> file \xe2\x80\xa6DlRuns the command and asserts that it <strong>failed</strong> nothing was \xe2\x80\xa6DoRuns the command and asserts that it <strong>succeeded</strong> nothing was \xe2\x80\xa6CfArtifacts which are guaranteed to be fresh (either \xe2\x80\xa6000000DdFunction with signature <code>beforeTestSetup(bytes4)</code> and \xe2\x80\xa600BgCreates a Filter from raw topic hashes.CiBuilds CallTraceDecoder from the execution result and \xe2\x80\xa6C`Very simple fuzzy matching of contract bytecode.CnReturns the path to foundry\xe2\x80\x99s chisel history file that\xe2\x80\x99\xe2\x80\xa6AiClears the foundry cache.CmCopies the bits from <code>src</code> into <code>self</code>.0ClClones the SessionSource and appends a new line of code. \xe2\x80\xa6ClReturns the effective target address whose code would be \xe2\x80\xa6ClHelper function to convert CompactContractBytecode ~&gt; \xe2\x80\xa6CkThe compilation profile to use to build the smart contract.AlBit-wise <code>memcpy</code>0CaCreates the request object for a new fork requestCmReturns a tuple of mutable references to the context, the \xe2\x80\xa60CiDecode a set of logs, only returning logs from DSTest \xe2\x80\xa6000ChDecodes raw opcode bytes into <code>Instruction</code>s.BlThe default decoded return data for a trace.D`<code>deleteSnapshots</code> is being deprecated in favor of \xe2\x80\xa600000DcDisable printing of <code>console.log</code> invocations to stdout.ChSkips the nonce validation against the account\xe2\x80\x99s nonce000BdDisable recording of individual logs000B`Disable recording of state diffs000CiHelper function that will link references in unlinked \xe2\x80\xa6CjThe price paid post-execution by the transaction (i.e. \xe2\x80\xa6CmReturns effective gas price is gas price field for Legacy \xe2\x80\xa600BjTransaction effective gas price, calls \xe2\x80\xa6011100D`Hash a message according to EIP-191 (version <code>0x01</code>).000CbWhether caching should be enabled for the chain idCbWhether caching should be enabled for the endpointCjConverts the <code>BlockNumber</code> into a numeric valueDiReturns an error if no access is granted to access <code>path</code>, \xe2\x80\xa6000CmExecutes the script using the provided runner and returns \xe2\x80\xa6CiExits all the previous internal calls that should end \xe2\x80\xa6CkExpects the deployment of the specified bytecode by the \xe2\x80\xa600000DjExpects a <code>count</code> number of reverts from the upcoming calls \xe2\x80\xa600000000000CcPath where fuzz failures are recorded and replayed.ChPath where invariant failures are recorded and replayed.10CiIndicates whether and how to persist failed test results.00CcPad and squeeze the state into <code>output</code>.0DjGenerates random wallets until <code>matcher</code> matches the wallet \xe2\x80\xa6CnThis crate contains the logic for Rust bindings generating \xe2\x80\xa6BlFormat a JSON value to a TOML pretty string.CkReturns the result of the frame to the caller. Frame is \xe2\x80\xa600000DiDeserializes the input into an <code>Option&lt;U256&gt;</code>, using \xe2\x80\xa6CnCreates counter example representing a step from invariant \xe2\x80\xa600ChCollects the contract sources and artifacts from the \xe2\x80\xa600BhInstantiate by hashing public key bytes.0DhConverts a vector of bytes to a <code>String</code> without checking \xe2\x80\xa60CiReturns the next call to be used in call sequence. If \xe2\x80\xa6BiGenerate table rows for benchmark resultsCjGets the blockhashes from the current transaction. Not \xe2\x80\xa600000DiReturns all broadcasts for the given contract on <code>chainId</code> \xe2\x80\xa600000DfReturns all broadcasts for the given contract on <code>chainId</code>.00000CnGets the deployed bytecode from an artifact file. Takes in \xe2\x80\xa600000DhReturns the most recent deployment for the current <code>chainId</code>.00000CmReturns the most recent deployment for the given contract \xe2\x80\xa600000CgGets all the recorded logs. Function with signature \xe2\x80\xa600000CbParse block overrides from command line arguments.BlA utility function to get the buffer access.BjReturns the chain ID from the RPC, if any.0AhGet RPC URL for an alias000CbParse state overrides from command line arguments.BnFetches target bytecode from linked contracts.CmCompiles target file requesting only metadata and returns \xe2\x80\xa6CeHandles CREATE2 frame initialization, potentially \xe2\x80\xa6CgIdentifies internal function invocations in a given \xe2\x80\xa600BcIgnore solc warnings by error code.0Cilist of solidity error codes to always silence in the \xe2\x80\xa6BmInserts account info but not override storage0AmInserts not existing account.BnInserts a non-existing account into the state.10BnContext passed to instruction implementations.0CnCreates a new <code>InternalError</code> error with a message.BmConverts a bit-vector into a boxed bit-slice.0CgDecodes the result of the call with the given function.00ChConsumes the Inspector and returns a ParityTraceBuilder.000BcReturn true if contract was changed0BnIf account is created globally for first time.0000000CkReturns whether the EIP-3541 (disallowing new contracts \xe2\x80\xa60000000CfReturns whether the EIP-3607 (account clearing) is \xe2\x80\xa60000000BnWhether the step opcode is EXTCODESIZE or not.000DaReturns <code>true</code> if a test can be considered successful.00EgConverts a JSON <code>Value</code> to a <code>DynSolValue</code> by trying to guess \xe2\x80\xa6DjChecks if <code>key</code> exists in a JSON object. Container type for \xe2\x80\xa600000DiChecks if <code>key</code> exists in a TOML table. Container type for \xe2\x80\xa600000CjLinks the build data with the given libraries. Expects \xe2\x80\xa6DkLoads the <code>Config</code> with the given <code>providers</code> preset.BbOffset of local context of memory.0DiThe maximum number of times all <code>Flatten</code> combinators will \xe2\x80\xa600CgUpdate provided history map with edge coverage info \xe2\x80\xa600Bjminimum amount of states we keep in memoryBhUse a BIP39 passphrase for the mnemonic.CiListeners for new blocks that get notified when a new \xe2\x80\xa6DfReturns a new, empty, <code>JournaledState</code> with set precompiles000DaCreate a new <code>Remappings</code> wrapper with a vector of \xe2\x80\xa6BlGet the next default session cache file nameDaNotifies all <code>new_block_listeners</code> about the new blockBnReturns the original bytecode as a byte slice.BgReturns original bytes without padding.10CdGiven a target address, we generate random calldata.000CbReturns the <code>Output</code> for a parity trace00EeParses a string of JSON data at <code>key</code> and coerces it to <code>bool</code>.00000CfReturns an array of all the keys in a JSON object. \xe2\x80\xa600000DfParses a string of JSON data at <code>key</code> and coerces it to \xe2\x80\xa600000CgParses a string of JSON data and coerces it to type \xe2\x80\xa600000DkParses a string of JSON data at <code>key</code> and coerces it to type \xe2\x80\xa600000222222EeParses a string of TOML data at <code>key</code> and coerces it to <code>bool</code>.00000CeReturns an array of all the keys in a TOML table. \xe2\x80\xa600000DfParses a string of TOML data at <code>key</code> and coerces it to \xe2\x80\xa600000CgParses a string of TOML data and coerces it to type \xe2\x80\xa600000DkParses a string of TOML data at <code>key</code> and coerces it to type \xe2\x80\xa600000222222BkAttempts to detect the appropriate license.Akthe pending eth transactionCnAll accounts that should be kept persistent when switching \xe2\x80\xa6000AkFunction with signature \xe2\x80\xa6CnLibraries that need to be deployed by sender before script \xe2\x80\xa6CePrefetches function and event signatures into the \xe2\x80\xa600ClProcesses the next interpreter action, either creating a \xe2\x80\xa60CnPrompts the user for an address in the terminal. Container \xe2\x80\xa600000DkDerives secp256r1 public key from the provided <code>privateKey</code>. \xe2\x80\xa600000DhReturns a random <code>address</code>. Container type for the return \xe2\x80\xa600000CmReads and decodes the json gzip file, then deserialize it \xe2\x80\xa6AnHIR id of referenced contract.CkWhether to generate remappings or completely leave them \xe2\x80\xa6CkThe location where the remappings file should be generated.B`Removes an existing subscriptionCjRemoves transactions and those that depend on them and \xe2\x80\xa6CnUnpauses collection of call traces. Container type for the \xe2\x80\xa600000CkCall frame has return memory range where output will be \xe2\x80\xa60ClRevert the state of the EVM to a previous snapshot Takes \xe2\x80\xa600000BmCollects account info of BundleState reverts.0CfReturns all rpc urls and their aliases as structs. \xe2\x80\xa600000CkRPC storage caching settings determines what chains and \xe2\x80\xa60000000CgExecutes the interpreter until it returns or stops, \xe2\x80\xa60CmCleans up any duplicate <code>Remapping</code> and sorts themDkSaves the specified <code>wallet</code> to a \xe2\x80\x98vanity_addresses.json\xe2\x80\x99\xe2\x80\xa6CkSee <code>serializeJson</code>. Function with signature \xe2\x80\xa600000000000CfSerializes a key and value to a JSON object stored \xe2\x80\xa600000111111111111CjConfigure whether the tracer should record immediate bytes000BeSet last invariant run call sequence.00CfConfigure how the tracer should record stack snapshots000CjSets up the calls generated by the internal fuzzer, if \xe2\x80\xa6BnReturns mutable access to the shutdown signal.BfSigns data with a <code>Wallet</code>.00000EaSigns <code>digest</code> with <code>privateKey</code> using the secp256k1 curve.00000DfSigns <code>digest</code> with signer provided to script using the \xe2\x80\xa600000000000CfSkips to the next opcode, taking into account PUSH \xe2\x80\xa60ClSnapshot the current state of the evm. Returns the ID of \xe2\x80\xa600000CnSnapshot capture an arbitrary numerical value by name. The \xe2\x80\xa600000CnSnapshot capture an arbitrary numerical value by name in a \xe2\x80\xa600000BdA map of source paths to source IDs.00CjIterates over mutable subslices separated by bits that \xe2\x80\xa60CbWhether the connection is spurious, or API is downCdHelper function for creating fuzz test progress bar.CmCreates progress entry for fuzz tests. Set the prefix and \xe2\x80\xa6CmStops collecting onchain transactions. Container type for \xe2\x80\xa600000CnPerforms a store operation on a partial-element whose bits \xe2\x80\xa60mMany-Bit Swap0CkGeneric helper function that attempts to convert a type \xe2\x80\xa6DgFunction with signature <code>targetArtifacts()</code> and selector \xe2\x80\xa600DgFunction with signature <code>targetContracts()</code> and selector \xe2\x80\xa600DgFunction with signature <code>targetSelectors()</code> and selector \xe2\x80\xa600CcContainer type for the return parameters of the \xe2\x80\xa600DgEncodes a <code>bytes</code> value to a base64url string. Container \xe2\x80\xa600000DhEncodes a <code>string</code> value to a base64url string. Container \xe2\x80\xa600000BgConvert a TOML string to a JSON string.BaInvoked at the end of root frame.AlGet transaction by its hash.C`Returns transaction receipt by transaction hash.BdTimeout for transactions in seconds.BgUnmarks the account as self destructed.0CkNew password for the JSON keystore in cleartext This is \xe2\x80\xa6CnUpdates the fork and the local mapping and returns the new \xe2\x80\xa6000BgUpdates seen edges or features metrics.CkChanges compilation to only use literal content and not \xe2\x80\xa60CnWhether to store the referenced sources in the metadata as \xe2\x80\xa6AnValidate EIP-4844 transaction.0CjVisit the generic member access expression and attempt \xe2\x80\xa6CaVisit statement as <code>Statement::Block</code>.AoWith boxed version of database.0CgSets the signature identifier for events and functions.00BdAppends top-level code to the sourceCjBy default state clear flag is enabled but for initial \xe2\x80\xa60DhWrapping Euclidean division. Computes <code>self.div_euclid(rhs)</code>,0DkWrapping Euclidean remainder. Computes <code>self.rem_euclid(rhs)</code>\xe2\x80\xa60ClWrites binary data to a file, creating a file if it does \xe2\x80\xa600000AlBENCH_CALLER_BALANCE balance000AlBENCH_TARGET_BALANCE balance000CfRepresents a state snapshot taken during evm execution0000CkShrinker for a call sequence failure. Iterates sequence \xe2\x80\xa6CmCLI helper to parse a EIP-7702 authorization list. Can be \xe2\x80\xa60CnHelper which manages the deployment transaction of a smart \xe2\x80\xa6AhThe default IPC endpointCeSame reasoning as DUMMY_CALL_OUTPUT, but for creates.CmThe capability to perform EIP-7702 delegations, sponsored \xe2\x80\xa6CfThe user agent to use when querying the etherscan API.DbEIP-7873 initcode transaction should have <code>to</code> address.0D`A response from the Etherscan API\xe2\x80\x99s <code>getabi</code> actionDcErrors that can occur when creating an <code>EtherscanConfig</code>CgA Provider that provides Etherscan API key from the \xe2\x80\xa6BlRepresents the outcome of mining a new blockBeType alias for an in-memory database.0000AiContains for fuzz testing0AeGit repo prefix regex0Eh<code>figment::Provider</code> for <code>InlineConfig</code> at a given contract and \xe2\x80\xa6CfStruct keeping mutable references to both parts of \xe2\x80\xa6CiA refined intermediate parse tree for a contract that \xe2\x80\xa6BbAn authorization item was invalid.CgThe HTTP endpoint for the websocket used to trigger \xe2\x80\xa6CmA trace identifier that tries to identify addresses using \xe2\x80\xa6000ClSelfdestruct is called for first time in one transaction \xe2\x80\xa60AoMap fp to g1 precompile address0ChThe target that identifies the events intended to be \xe2\x80\xa6ChA notification that\xe2\x80\x99s emitted when a new block was \xe2\x80\xa6CkPAIRING_INPUT_LENGTH specifies the number of bytes that \xe2\x80\xa60CfGas refund for SSTORE when clearing a storage slot \xe2\x80\xa60CkEIP-3607 Reject transactions from senders with deployed \xe2\x80\xa60BoContainer type for <em>resolved</em> endpoints.0BkEnriched results of an invariant run check.BoCLI arguments for <code>forge selectors</code>.C`Represents how to send <em>all</em> transactionsCmAn identifier that tries to identify functions and events \xe2\x80\xa6000BiStyle of single line blocks in statements0BhSettings to configure caching of remote.BcA trait for validating transactionsAfUses transient opcodesCiVisitor that detects unchecked low-level calls within \xe2\x80\xa6CmAn abstraction for various verification providers such as \xe2\x80\xa6CkHelper to retrieve functions to fuzz for specified abi. \xe2\x80\xa600ChAllow insecure RPC connections (accept invalid HTTPS \xe2\x80\xa60BlSets whether to accept invalid certificates.BgWhether to accept invalid certificates.BkSet whether to accept invalid certificates.1ChRetrieves the activation timestamp for the specified \xe2\x80\xa6CcContainer type for the return parameters of the \xe2\x80\xa600CfAdd an address to the delegation capability of wallet.C`Writes a single slot of the account\xe2\x80\x99s storage.FdConverts a <code>U256</code> value to a <code>usize</code> and returns <code>ret</code>, failing \xe2\x80\xa60DhAsserts that two <code>string</code> values are not equal. Container \xe2\x80\xa600000DjAsserts that two <code>string</code> values are not equal and includes \xe2\x80\xa600000DgAsserts that two <code>bytes</code> values are not equal. Container \xe2\x80\xa600000DiAsserts that two <code>bytes</code> values are not equal and includes \xe2\x80\xa600000DfAsserts that two arrays of <code>bool</code> values are not equal. \xe2\x80\xa600000DiAsserts that two arrays of <code>bool</code> values are not equal and \xe2\x80\xa600000DiAsserts that two arrays of <code>uint256</code> values are not equal. \xe2\x80\xa600000DhAsserts that two arrays of <code>uint256</code> values are not equal \xe2\x80\xa600000DhAsserts that two arrays of <code>int256</code> values are not equal. \xe2\x80\xa600000DkAsserts that two arrays of <code>int256</code> values are not equal and \xe2\x80\xa600000DiAsserts that two arrays of <code>address</code> values are not equal. \xe2\x80\xa600000DhAsserts that two arrays of <code>address</code> values are not equal \xe2\x80\xa600000DiAsserts that two arrays of <code>bytes32</code> values are not equal. \xe2\x80\xa600000DhAsserts that two arrays of <code>bytes32</code> values are not equal \xe2\x80\xa600000DhAsserts that two arrays of <code>string</code> values are not equal. \xe2\x80\xa600000DkAsserts that two arrays of <code>string</code> values are not equal and \xe2\x80\xa600000DgAsserts that two arrays of <code>bytes</code> values are not equal. \xe2\x80\xa600000DjAsserts that two arrays of <code>bytes</code> values are not equal and \xe2\x80\xa600000DdAsserts that the <code>&lt;root&gt;/foundry.toml</code> file exists.CmDiscard this run\xe2\x80\x99s fuzz inputs and generate new ones if \xe2\x80\xa600000000000000000AhBenchmark forge coverageCeSearch over a sorted map with an extraction function.CeSearch over a sorted set with an extraction function.101010BoReturns a <em>full</em> block with given numberChInjects the revert diagnostic into the debug traces. \xe2\x80\xa6DjCalculates the <code>excess_blob_gas</code> from the parent header\xe2\x80\x99s \xe2\x80\xa6000BjCalculate the linear cost of a precompile.0DfIf true, <code>afterInvariant</code> function is called after each \xe2\x80\xa600CkChecks if the transaction is a deployment with either a \xe2\x80\xa6BkCheck for unused imports and emit warnings.CdClears all mocked calls. Function with signature \xe2\x80\xa600000BoRemoves all data cached from previous responsesCePerforms DFS on the graph of link references, and \xe2\x80\xa6CmConfigures the env for the given RPC transaction request. \xe2\x80\xa6000CfMaps contract name to (start, end) of the contract \xe2\x80\xa60C`Converts a block identifier into a block number.CjCREATE2 salt to use for the library deployment in scripts.CkDerives a private key from the name, labels the account \xe2\x80\xa600000CkGenerates a wallet from the private key and returns the \xe2\x80\xa600000CgGenerates a wallet from the private key, labels the \xe2\x80\xa600000CkCreates WalletSigner instance from given Ledger parameters.CmCreates a nonce matcher function, which takes a reference \xe2\x80\xa6CkCreates WalletSigner instance from given Trezor parameters.CaThe transaction hash of the creation transaction.Co<code>deleteSnapshot</code> is being deprecated in favor of \xe2\x80\xa600000CfHelper that expands memory, stores a revert string \xe2\x80\xa6BeClears top-level code from the sourceAlEnable dynamic test linking.0BkSets if tests should be dynamically linked.CjWhether to compile with dynamic linking tests and scripts.Bawhether to dynamically link testsCdGenerates the hash of the canonical EIP-712 type \xe2\x80\xa600000000000CiEnable transaction/call steps tracing for debug calls \xe2\x80\xa60CiGiven a function and a vector of string arguments, it \xe2\x80\xa6DhFunction with signature <code>excludeArtifacts()</code> and selector \xe2\x80\xa600DhFunction with signature <code>excludeContracts()</code> and selector \xe2\x80\xa600DhFunction with signature <code>excludeSelectors()</code> and selector \xe2\x80\xa600CcContainer type for the return parameters of the \xe2\x80\xa600CgExpects an error on next call with any revert data. \xe2\x80\xa600000CjExpects an error on next call that exactly matches the \xe2\x80\xa600000000000CiExpects an error with any revert data on next call to \xe2\x80\xa600000CmExpects an error from reverter address on next call, with \xe2\x80\xa600000CmExpects an error from reverter address on next call, that \xe2\x80\xa600000DjExpects a <code>count</code> number of reverts from the upcoming calls \xe2\x80\xa600000000000000000000000CjOnly allows memory writes to offsets [0x00, 0x60) \xe2\x88\xaa [\xe2\x80\xa600000BnOptionally enables experimental Venom pipeline0CdAppends the contents of a bit-slice to a bit-vector.0CiName of the file to record fuzz failures, defaults to \xe2\x80\xa60CfForward the function implementation to CommentsRef \xe2\x80\xa6CjFind an CommentTag::Inheritdoc comment and extract the \xe2\x80\xa6ChFind the start of the next instance of a slice in sourceBnOptional periodic interval to flush rpc cache.0BoNumber of request retries for spurious networksCmNumber of retry requests for spurious networks (timed out \xe2\x80\xa6DgSets the <code>fork_request_retries</code> to use for spurious networks2CmTimeout in for requests sent to remote JSON-RPC server in \xe2\x80\xa6CmTimeout in ms for requests sent to remote JSON-RPC server \xe2\x80\xa6CnSets the <code>fork_request_timeout</code> to use for requests2Adfoundry-evm-coverageCfConstruct a comment with metadata by analyzing its \xe2\x80\xa6DiConstructs a shared <code>&amp;BitSlice</code> over an element slice, \xe2\x80\xa60BlAll function definitions within the contractAdGenesis block number0DhGets the current <code>block.blobbasefee</code>. You should use this \xe2\x80\xa600000DkGets the current <code>block.number</code>. You should use this instead \xe2\x80\xa600000DfReturns all deployments for the given contract on <code>chainId</code>00000CkGets the number of elements in the mapping at the given \xe2\x80\xa600000CnGets the elements at index idx of the mapping at the given \xe2\x80\xa600000DkReturns state diffs from current <code>vm.startStateDiffRecording</code>\xe2\x80\xa600000CgReturns the <code>EtherscanConfig</code> to use, if anyBcGet or initialize the RPC provider.CkReturns a ProviderBuilder instantiated using Config values.CbMutable getter for <code>revert_range</code> field0CiReturns the accounts necessary for transaction execution.00DaRuns <code>git submodule status</code> inside the project\xe2\x80\x99s dirDhReturns <code>true</code> if the given account is allowed to execute \xe2\x80\xa6000AeIdentified contracts.BaExtends the identified contracts.1CiUtility function to ignore metadata hash of the given \xe2\x80\xa60DjA macro to implement converters from a type to <code>Config</code> and \xe2\x80\xa6CfInsert values collected from call result into fuzz \xe2\x80\xa6CnInsert sample values that are reused across multiple runs. \xe2\x80\xa6ClInsert values from single storage slot and storage value \xe2\x80\xa6BmRun Interpreter loop with inspection support.000BiInstalls the dependency as new submodule.DbConverts the result of the call into an <code>ExecutionErr</code>.00CaReturns the fail result for invariant test setup.E`Returns <code>true</code> if this function is a <code>beforeTestSetup</code> \xe2\x80\xa6CeCheck if the buffer is at the beginning of a new lineBiReturns true of the address is a contractCjQueries the Etherscan API to verify if the contract is \xe2\x80\xa6BnCheck legacy jump destination from jump table.0DkKZG point evaluation precompile added in <code>EIP-4844</code> For more \xe2\x80\xa60CnA module that deserializes either a BlockNumberOrTag, or a \xe2\x80\xa6Ckdeserializes either a BlockNumberOrTag, or a simple number.CkMarks that the account(s) should use persistent storage \xe2\x80\xa600000DeSee <code>makePersistent(address)</code>. Function with signature \xe2\x80\xa600000000000000000CkMark account as locally created and mark global created \xe2\x80\xa60ChReturns the maximum balance that can be spent by the \xe2\x80\xa600000AdMax fee per data gasAhThe max fee per blob gasAlSet the max fee per blob gas122210122BdMax number of states cached on disk.BhMax number of states to persist on disk.1BkErase from cursor to end of line if needed.BmReturns all transaction receipts of the blockDhReturns all <code>Log</code>s mined by the node that were emitted in \xe2\x80\xa6BiUse a BIP39 passphrases for the mnemonic.00ClReverts a call to an address with specified revert data. \xe2\x80\xa600000DhReverts a call to an address with a specific <code>msg.value</code>, \xe2\x80\xa600000ChReverts a call to an address with specified revert data.00000111111AkModifies the context block.0AkModifies the context chain.0CnContains the next timestamp to use if this is set then the \xe2\x80\xa6CcReturns the next <em>mainnet</em> rpc URL in inlineCkThe number of optimization runs used to build the smart \xe2\x80\xa6DfParses a string of JSON data at <code>key</code> and coerces it to \xe2\x80\xa600000000000EhParses a string of JSON data at <code>key</code> and coerces it to <code>bytes</code>\xe2\x80\xa600000DfParses a string of TOML data at <code>key</code> and coerces it to \xe2\x80\xa600000000000EhParses a string of TOML data at <code>key</code> and coerces it to <code>bytes</code>\xe2\x80\xa600000BaDecodes string from bytes32 valueChOnly run tests in source files that do not match the \xe2\x80\xa600CmPauses gas metering (i.e. gas usage is not counted). Noop \xe2\x80\xa600000CnReturns all transactions that are not ready to be included \xe2\x80\xa6ClPersist filter with last test run failures (only if there\xe2\x80\xa6BiReturns the addresses of the precompiles.00000BmWhether the account was previously destroyed.000CeIf provided, the address will be derived from the \xe2\x80\xa6ChIf provided, the public key will be derived from the \xe2\x80\xa6CgPrompts the user for hidden uint256 in the terminal \xe2\x80\xa600000DdReads the entire content of file as binary. <code>path</code> is \xe2\x80\xa600000DjRecovers a <code>VerifyingKey</code> from this signature and the given \xe2\x80\xa60CgUnique HIR ids of contracts referenced from current \xe2\x80\xa6CaReturns the relative path of the document output.CiDerive a set number of wallets from a mnemonic at the \xe2\x80\xa600000CiDerive a set number of wallets from a mnemonic in the \xe2\x80\xa600000ClReset gas metering (i.e. gas usage is set to gas limit). \xe2\x80\xa600000ClThe return memory offset where the output of the call is \xe2\x80\xa6000BdStrategy to select a sender address:BkThe address of the selfdestructed contract.00BmSends signed transaction, returning its hash.CkSee <code>serializeJson</code>. Function with signature \xe2\x80\xa600000000000DaSee <code>serializeJson</code>. Container type for the return \xe2\x80\xa600000000000CgSets the nonce of an account to an arbitrary value. \xe2\x80\xa600000BbSets the block number if provided.000CmWrites the CREATE2 deployer code directly to the database \xe2\x80\xa6BaSet the CREATE2 deployer address.00CkInner clone part of memory from global context to local \xe2\x80\xa60AdSets the blob target0CkConfigure whether the tracer should record memory snapshots000AoSets state clear flag. EIP-161.CkState clear EIP-161 is enabled in Spurious Dragon hardfork.10ClSet the topic list, without length-checking. This allows \xe2\x80\xa60CiConfigures everything related to forking based on the \xe2\x80\xa6ClInterpreter shared memory buffer. A reused memory buffer \xe2\x80\xa6000000000ClIf OpcodeFilter is configured, returns whether the given \xe2\x80\xa6000CjSign an EIP-7702 authorization for delegation Function \xe2\x80\xa600000CnSign an EIP-7702 authorization for delegation for specific \xe2\x80\xa600000CgSign an EIP-7702 authorization for delegation, with \xe2\x80\xa600000C`A signature identifier for events and functions.000AoWhether to skip blob validationBbRaw Bit-Slice Pointer Construction0EgSame as <code>Self::spawn_backend</code> but spawns the <code>BackendHandler</code> \xe2\x80\xa6000CmHas all subsequent calls (at this call depth only) create \xe2\x80\xa600000000000000000CiCreates new test suite progress and add it to overall \xe2\x80\xa6CbOverride the state diff of an account. Format: \xe2\x80\xa6DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa6DgReturn an iterator over the values that are in <code>self</code> or \xe2\x80\xa6ClVisits the values representing the symmetric difference, \xe2\x80\xa6210DhFunction with signature <code>targetInterfaces()</code> and selector \xe2\x80\xa600CkOnly run test functions that do not match the specified \xe2\x80\xa600CjGet a mutable reference to the topic list. This allows \xe2\x80\xa60CgTransact multiple transactions and commit to the state.00000DkCalls <code>SystemCallEvm::transact_system_call_with_caller</code> with \xe2\x80\xa600000Bdlisteners for new ready transactionsChReturns the priority of the transaction based on the \xe2\x80\xa6CfCreates a new RPC error for when a transaction was \xe2\x80\xa6ClAttempts to convert an ordinary boxed slice into a boxed \xe2\x80\xa60AjUpdates the account state.0DkUpdates the revert reason field using <code>eth_call</code> and returns \xe2\x80\xa6CmAddition layer that is going to be used to fetched values \xe2\x80\xa600000000000CnAll variable definitions within the top level scope of the \xe2\x80\xa6CeThe verifier API version, if using a custom provider.ChAllows setting prestate that is going to be used for \xe2\x80\xa60BjIt will use different cache for the state.0CkClones the provider and returns a new instance with the \xe2\x80\xa6AmSets a custom code size limitCkSets the balance of the genesis accounts in the genesis \xe2\x80\xa6BmLoads the init state from a file if it existsBcAdd known contracts to the decoder.00CaUse current project artifacts for trace decoding.0AhSets the signer accountsBfSets whether to write storage changes.00CjReturns the address of the most popular wrapped native \xe2\x80\xa6BjWrite the line of a doc block comment lineDkWrite empty brackets with respect to <code>config.bracket_spacing</code>\xe2\x80\xa6BlWrites the object as a gzip compressed file.BkWrites a link to the buffer as a list item.CeWrite a comment with position CommentPosition::PrefixDhWrite new line with preserved <code>last_indent_group_skipped</code> \xe2\x80\xa6ClStack-allocated buffer for efficiently computing address \xe2\x80\xa60CnThe error type that is returned when conversion to or from \xe2\x80\xa60DiThrown when Blob transaction is a create transaction. <code>to</code> \xe2\x80\xa6CaBlob transaction can\xe2\x80\x99t be a create transaction.0CmStructure holding block blob excess gas and it calculates \xe2\x80\xa6000C`The commitment does not match the versioned hash000BlThe value parser for <code>ChainOrAll</code>AnAnti-Aliasing Iterator Adapter0AoContract level output selectionClReturned by a single fuzz when a counterexample has been \xe2\x80\xa6000CdDefault interval for periodically dumping the state.CcDiscounts table for G1 MSM as a vector of pairs \xe2\x80\xa60CcDiscounts table for G2 MSM as a vector of pairs \xe2\x80\xa60ClA provider that checks for DAPP_ env vars that are named \xe2\x80\xa6Cfgeth\xe2\x80\x99s <code>debug_traceTransaction</code>  endpointEbRepresents the <code>params</code> field of an <code>eth_subscription</code> eventCfSelfdestruct is called for first time in global scope.0BeInvalid construction of Http providerBlBn128 add precompile with ISTANBUL gas rules0BlBn128 mul precompile with ISTANBUL gas rules0ClThe infer hyperlinks preprocessor tries to map @dev tags \xe2\x80\xa60BkErrors returned when parsing inline config.CaA defined type for a map of contract names to \xe2\x80\xa6CdInspector implementation for collecting coverage \xe2\x80\xa6000000B`Map fp2 to g2 precompile address0CgResult of attempting to extend memory during execution.0BkType alias for a receiver that receives \xe2\x80\xa6DjOtterscan\xe2\x80\x99s <code>ots_getTransactionBySenderAndNonce</code> endpoint \xe2\x80\xa6CkWarning: This contract has a payable fallback function, \xe2\x80\xa6AhPlain storage changeset.000BePrecompile with address and function.0CmAn iterator over characters and indices in a string slice \xe2\x80\xa6BoRetry config used when waiting for verificationBoA miner that Listens for new ready transactionsClRenames a profile from <code>from</code> to <code>to</code>.BeError type for the runtime transport.CaState of ProgressBars displayed for the given \xe2\x80\xa6CgFor 2 args of the same type x,y in a function args: \xe2\x80\xa6CnFor an expr taking 2 expression x, y (x+y, x-y, x = x + \xe2\x80\xa6\xe2\x80\xa6BbThe default test contract address.000BmUnnamed return variable can remain unassignedBjError when we failed to resolve an env var0BhUnwraps a profile reducing the key depthfWalletnWallet send_txCiAdds a child element to the parent item if it exists. \xe2\x80\xa6BgAdds the transaction to the ready queueCgIn forking mode, explicitly grant the given address \xe2\x80\xa600000CnAppends an AccountAccess that resumes the recording of the \xe2\x80\xa6ClApplies the given block overrides to the env and updates \xe2\x80\xa6ChApplies the changeset of a transaction to the active \xe2\x80\xa6CfApplies the given state overrides to the given CacheDBCkGenerates or copies arbitrary values for storage slots. \xe2\x80\xa6DkAsserts that two <code>uint256</code> values are equal, formatting them \xe2\x80\xa600000000000DjAsserts that two <code>int256</code> values are equal, formatting them \xe2\x80\xa600000000000DgCompares two <code>uint256</code> values. Expects first value to be \xe2\x80\xa600000000000DfCompares two <code>int256</code> values. Expects first value to be \xe2\x80\xa600000000000111111111111000000000000111111111111DkCompares two <code>int256</code> values. Expects first value to be less \xe2\x80\xa600000000000222222222222000000000000CcContainer type for the return parameters of the \xe2\x80\xa600AjBenchmark forge fuzz testsBkReturns vector of fixed size hash(32 bytes)00000CmReturns an iterator over the storage slots that have been \xe2\x80\xa60CbSet whether to enable the edge coverage collector.00CbSet whether to enable the line coverage collector.00ChThe path to a file containing the constructor arguments.00CcThe constructor arguments of the contract on chain.BlConverts a block of hashes into a full blockCkCopies bits from one region of the bit-slice to another \xe2\x80\xa60CiReturns the amount of different bytes between two slices.CkCreates helper libraries for contracts with a non-empty \xe2\x80\xa6CnCreates a new <code>evm_snapshot</code> at the current height.DiCreates the <code>VerifyContract</code> Etherscan request in order to \xe2\x80\xa6CbDecodes a function\xe2\x80\x99s input into the given trace.D`<code>deleteSnapshots</code> is being deprecated in favor of \xe2\x80\xa600000CiDeletes the state snapshot with the given <code>id</code>000CkDeprecated cheatcodes (mapped to their replacements, if \xe2\x80\xa6BhSkip balance checks if <code>true</code>000CfReturns an error if EIP1559 is not active (pre Berlin)CkReturns an error if EIP1559 is not active (pre muirGlacier)AjThe Etherscan API version.0Aeetherscan API versionDjExpects a <code>count</code> number of reverts from the upcoming calls \xe2\x80\xa600000000000CkAppends a slice of <code>T</code> elements to a bit-vector.0DbIf the expression is a call to <code>keccak256</code> with one \xe2\x80\xa6BoNUmber of failed replays from persisted corpus.000DcFinds a contract which has a similar bytecode as <code>code</code>.CmFinds a contract which has a similar deployed bytecode as \xe2\x80\xa6CmReturns the list of additional senders of a matching task \xe2\x80\xa6BbScript Sequence and related types.CnFetch state from a specific transaction hash over a remote \xe2\x80\xa6BaEncodes string into bytes32 valueCgCompares the current Foundry version with the given \xe2\x80\xa600000CbReturns the path to foundry\xe2\x80\x99s keystores dir: \xe2\x80\xa6BnReturns the path to foundry rpc cache dir: \xe2\x80\xa6CdParses a signature from a byte slice, with a v value0AlUnpacks an execution result.00BmReturns a config for geth\xe2\x80\x99s FlatCallTracer.000BiReturns a config for geth\xe2\x80\x99s CallTracer.000EnConverts a <code>Vec&lt;u8&gt;</code> to a <code>String</code>, substituting invalid UTF-8 \xe2\x80\xa60CmGiven a parameter type, returns a strategy for generating \xe2\x80\xa6000DfGets the current <code>block.timestamp</code>. You should use this \xe2\x80\xa600000DiReturns all broadcasts for the given contract on <code>chainId</code> \xe2\x80\xa600000DfReturns all broadcasts for the given contract on <code>chainId</code>.00000CnGets the deployed bytecode from an artifact file. Takes in \xe2\x80\xa600000DhReturns the most recent deployment for the current <code>chainId</code>.00000CmReturns the most recent deployment for the given contract \xe2\x80\xa600000DcReturns the Foundry version. Format: &lt;cargo_version&gt;-+&lt;\xe2\x80\xa600000CmGets all the recorded logs. Container type for the return \xe2\x80\xa600000BgHelper function to just get the API keyBdReturns the genesis timestamp to useDgReturns the <code>UiFmt::pretty()</code> formatted attribute of the \xe2\x80\xa60DfAttempts to resolve the URL for the given alias from <code>mesc</code>CnReturns a SequenceProgress instance for the given sequence \xe2\x80\xa6CcMutable getter for <code>state_present</code> field0CcMutable getter for <code>state_storage</code> field0DbReturns the nonce of the <code>address</code> depending on the \xe2\x80\xa6CnConverts this call trace into an <em>empty</em> geth CallFrame00C`Whether the given address has arbitrary storage.000CkReturns <code>true</code> if account has no nonce and code.0CkReturns all accounts that are currently being impersonated.BlAll accounts that are currently impersonatedDhCreate an <code>IndexMap</code> from a list of key-value pairs and a \xe2\x80\xa60CoCreate an <code>IndexSet</code> from a list of values and a \xe2\x80\xa60CmGracefully attempts to extract the type of the expression \xe2\x80\xa6CbInitialize an empty project at the root directory.BmInitialize default chain data (similar to \xe2\x80\xa6000CiInserts the given key and value into the map with the \xe2\x80\xa60BaRun inspection on execution loop.000CkCauses the next contract creation (via new) to fail and \xe2\x80\xa600000CdReturns the fail result for replayed invariant test.DhThis tracks numeric fork ids and the <code>ForkId</code> used by the \xe2\x80\xa6000CfUse a keystore from the default keystores folder (~\xe2\x80\xa6Db<code>VERSIONED_HASH_VERSION_KZG ++ sha256(commitment)[1..]</code>0CfGets the most recent chisel session from the cache dirCjLoads account. If account is already loaded it will be \xe2\x80\xa60CmLoads the config for the current project workspace or the \xe2\x80\xa6AhEvent with signature \xe2\x80\xa600AnReturns the suggested fee cap.BeMax allowed request that can time outClThe starting backoff delay to use after the first failed \xe2\x80\xa6EdClones the account data from the <code>active</code> db into the <code>ForkDB</code>CnReturns the most significant 64 bits of the number and the \xe2\x80\xa60CkStyle of multiline function header in case it doesn\xe2\x80\x99t fit0ClCreates a new memory instance that can be shared between \xe2\x80\xa60CiDoes the next written character require whitespace beforeCnReturns the next valid nonce for a delegation, considering \xe2\x80\xa6CkDisable the default request body size limit. At time of \xe2\x80\xa60CmNormalizes the evm version if a SolcReq is set to a valid \xe2\x80\xa6DkConverts the start offset of a <code>Loc</code> to <code>(line, col)</code>0CgFor simplicity purposes, we return the entire block \xe2\x80\xa6CgTrace a transaction and generate a trace call tree. \xe2\x80\xa6DfParses a string of JSON data at <code>key</code> and coerces it to \xe2\x80\xa600000000000CgParses a string of JSON data and coerces it to type \xe2\x80\xa600000DkParses a string of JSON data at <code>key</code> and coerces it to type \xe2\x80\xa600000DfParses a string of TOML data at <code>key</code> and coerces it to \xe2\x80\xa600000000000CgParses a string of TOML data and coerces it to type \xe2\x80\xa600000DkParses a string of TOML data at <code>key</code> and coerces it to type \xe2\x80\xa600000BnDecodes checksummed address from bytes32 valueCcContainer type for the return parameters of the \xe2\x80\xa6ClOptional filter for opcodes to record. If provided, only \xe2\x80\xa600000CnWhether to regenerate the remappings every time and ignore \xe2\x80\xa6ClRemoves and returns those transactions that got replaced \xe2\x80\xa6DdConverts a given struct into its EIP-712 <code>encodeType</code> \xe2\x80\xa6CkResumes gas metering (i.e. gas usage is counted again). \xe2\x80\xa600000Db<code>revertToAndDelete</code> is being deprecated in favor of \xe2\x80\xa600000CmReverts the state to the state snapshot identified by the \xe2\x80\xa6CnRemoves the snapshot from the tracked snapshot and sets it \xe2\x80\xa60B`Reverts the entire fork database010101EeRight-pads the given slice at <code>offset</code> with zeroes until <code>LEN</code>.0CjRuns the given async closure in a loop, retrying if it \xe2\x80\xa6BiSends a transaction and waits for receiptDaSee <code>serializeJson</code>. Container type for the return \xe2\x80\xa600000000000CkSee <code>serializeJson</code>. Function with signature \xe2\x80\xa600000000000111111111111EbSerialize <code>U256</code> as <code>u64</code> if it fits, otherwise as a hex \xe2\x80\xa6CjWrites a new value into a single bit, using alias-safe \xe2\x80\xa60DdSet <code>forge</code> command current execution context for the \xe2\x80\xa6000BeSet last invariant test call results.00DcSets whether <code>failed()</code> should be called on the test \xe2\x80\xa600BkSet the topic list, truncating to 4 topics.0BiUpdates the <code>TransactionOrder</code>BcSetup Repositories for benchmarkingCnSnapshot capture an arbitrary numerical value by name. The \xe2\x80\xa600000CnSnapshot capture an arbitrary numerical value by name in a \xe2\x80\xa600000CjStop the snapshot capture of the current gas by latest \xe2\x80\xa600000CiStop the snapshot capture of the current gas usage by \xe2\x80\xa600000CnStop the snapshot capture of the current gas usage by name \xe2\x80\xa600000ClIf there is transition that clears the storage we should \xe2\x80\xa600000BhReturns the Superposition testnet chain.CcContainer type for the return parameters of the \xe2\x80\xa600000000CiInvoked at the beginning of a new top-level (0 depth) \xe2\x80\xa6CnConstructs a provider with a 100 millisecond interval poll \xe2\x80\xa6CnTries to write the parameters table to the buffer. Doesn\xe2\x80\x99\xe2\x80\xa6CmPrevents a misconfigured hwlib from sending a transaction \xe2\x80\xa6CkTries to create a <code>Vec</code> with the given capacity.0BlReturns the configured verification providerAkWarms the coinbase account.00000CmWarm coinbase address, stored separately to avoid cloning \xe2\x80\xa6000000000BfSets whether to enable autoImpersonateClConvenience function that overrides the configured block \xe2\x80\xa6000ClAdd a contract context around a procedure and revert the \xe2\x80\xa6BjSets the debug identifier for the decoder.00ClPopulates additional data from the transaction execution \xe2\x80\xa6ClAdd a function context around a procedure and revert the \xe2\x80\xa6AiSets the genesis accountsAdSets the blob target0DjIf the output medium is terminal, this calls <code>f</code> within the \xe2\x80\xa6ClWrites binary data to a file, creating a file if it does \xe2\x80\xa600000AiWrite the function headerCnWrite each Visitable item on a separate line. The function \xe2\x80\xa6CfWrite a comment with position CommentPosition::PostfixAkAlchemy free tier cups: \xe2\x80\xa6CmThrown when an access list is used before the berlin hard \xe2\x80\xa6CmAccess list is not supported for blocks before the Berlin \xe2\x80\xa60BdWill make every account impersonatedBmBn128 add precompile with BYZANTIUM gas rules0BmBn128 mul precompile with BYZANTIUM gas rules0BiThe input length is not exactly 192 bytes000BfRepresents a bytecode dependency kind.EgA provider that sets the <code>src</code> and <code>output</code> path depending on \xe2\x80\xa6Cggeth\xe2\x80\x99s <code>debug_getRawTransaction</code>  endpointCiThe target that identifies the events coming from the \xe2\x80\xa6BhEmpty Authorization List is not allowed.0CkAn error thrown when resolving a function via signature \xe2\x80\xa6CmLegacy analyzed bytecode represents the original bytecode \xe2\x80\xa6000AmModexp limit all input sizes.000BiBuilder for <code>MultiWalletOpts</code>.DgOtterscan\xe2\x80\x99s <code>ots_getTransactionError</code> endpoint Given a \xe2\x80\xa6CkCost of creating authorized account that was previously \xe2\x80\xa60AiA transaction in the poolAnAnti-Aliasing Iterator Adapter0CeRetry config used when waiting for a created contractAjA recovered authorization.0CdRemoves transactions from the pool by sender origin.CnThrown if a replacement transaction\xe2\x80\x99s gas price is below \xe2\x80\xa6DeRegex used to parse <code>.gitmodules</code> file and capture the \xe2\x80\xa6CmRegex used to parse <code>git submodule status</code> output.CgEnum to cover both available formats for defining a \xe2\x80\xa6ChWarning that SPDX license identifier not provided in \xe2\x80\xa6BgGives guidance to the TracingInspector.00000ChUsed for broadcasting transactions A transaction can \xe2\x80\xa6CmIt is used to track an EIP-1153 transient storage change. \xe2\x80\xa60000000CiGas cost for reading from a warm storage slot (EIP-2929).0CjKeeps track of active state snapshots at a specific block.BfMarks the given account as persistent.000CeParse an override string in the format address:value.CjGrants cheatcode access for the given <code>account</code>000BbRemoves transactions from the poolCgGiven the executor state, asserts conditions within \xe2\x80\xa6BkAsserts all project paths exist. These are:Ce<code>[(private_key_slot, expected increment)]</code>CmDiscard this run\xe2\x80\x99s fuzz inputs and generate new ones if \xe2\x80\xa600000000000000000CfDesignate the next call as an EIP-7702 transaction \xe2\x80\xa600000ClDesignate the next call as an EIP-7702 transaction, with \xe2\x80\xa600000BiReturns length of the authorization list.00000DfWhether to autodetect remappings by scanning the <code>libs</code> \xe2\x80\xa6DaWhether to auto detect remappings from the <code>lib_paths</code>0CgReturns the chain\xe2\x80\x99s average blocktime, if applicable.0AhThe base fee in a block.00Agthe base fee in a block0CgCreates a Filter from the given event signature and \xe2\x80\xa6CkTraverse the artifacts in the project to generate local \xe2\x80\xa60CnCanonicalize a json path key to always start from the root \xe2\x80\xa6ClShould be called after the source unit has been visited. \xe2\x80\xa60ClChecks if all RPCs support EIP-3855. Prints a warning if \xe2\x80\xa6CjClears all mocked calls. Container type for the return \xe2\x80\xa600000CdClears the blob target and max count over hardforks.0DeConstructs a <code>Config</code> only differing from the provided \xe2\x80\xa600CfComputes the next timestamp without updating internalsEnCopies <code>count</code> bits from <code>self</code> to <code>dest</code>. The source and \xe2\x80\xa60CfCreates and also selects a new fork with the given \xe2\x80\xa600000000000CmCreates and also selects new fork with the given endpoint \xe2\x80\xa600000BnCreates keystore signer from given parameters.CeCreates WalletSigner instance from given mnemonic \xe2\x80\xa6DcReturns the current timestamp for a call that does <em>not</em> \xe2\x80\xa6CcDecodes a function\xe2\x80\x99s output into the given trace.CmDecodes a raw EIP2718 transaction payload Returns details \xe2\x80\xa6AlDeletes all state snapshots.000CeDeserializes a number from hex or int, but optionallyDkDeserializes single integer params: <code>1, [1], [&quot;0x01&quot;]</code>DfDeserialize a <code>u64</code> or \xe2\x80\x9cmax\xe2\x80\x9d for <code>u64::MAX</code>.CkGenerates the struct hash of the canonical EIP-712 type \xe2\x80\xa600000000000CdGenerates the hash of the canonical EIP-712 type \xe2\x80\xa600000000000CiReturns the chain\xe2\x80\x99s blockchain explorer\xe2\x80\x99s API key \xe2\x80\xa60CcContainer type for the return parameters of the \xe2\x80\xa600000000DiExpect a call to an address with the specified <code>msg.value</code> \xe2\x80\xa600000CgExpect given number of calls to an address with the \xe2\x80\xa600000CjOnly allows memory writes to offsets [0x00, 0x60) \xe2\x88\xaa [\xe2\x80\xa600000BjFinds the latest appropriate block to forkBbInitialize the global thread pool.BaAdditional diagnostic for reverts000000CmCalculate this block excess gas and price from the parent \xe2\x80\xa60CkGets the number of elements in the mapping at the given \xe2\x80\xa600000CnGets the elements at index idx of the mapping at the given \xe2\x80\xa600000DkReturns state diffs from current <code>vm.startStateDiffRecording</code>\xe2\x80\xa600000CfGet Foundry versions to benchmark from environment \xe2\x80\xa6CfReturns EIP-712 canonical type definition from the \xe2\x80\xa6CkGoes over the list of contracts we have pulled from the \xe2\x80\xa600CdMutable getter for <code>revert_account</code> field0CdMutable getter for <code>revert_storage</code> field0BnResolves the given alias to a matching rpc urlCnReturns sources which include any tests to be executed. If \xe2\x80\xa6CdMutable getter for <code>state_original</code> field0DgGets all the targeted functions from <code>artifact</code>. Returns \xe2\x80\xa600DfReturns the remapping for the project\xe2\x80\x99s <em>test</em> directory, \xe2\x80\xa6C`Retrieve the total number of tokens in calldata.0CnUses Etherscan API to fetch contract creation transaction. \xe2\x80\xa6CfTry to extract constructor arguments from on-chain \xe2\x80\xa6CeTrue if the network calculates gas costs differently.0C`The signature used to bypass signing via the \xe2\x80\xa6CgInserts account storage without overriding account infoCeInserts a value on an account\xe2\x80\x99s storage without \xe2\x80\xa61000AfIntermediate contractsDfWhether to allow <code>expectRevert</code> to work for internal calls.000000C`Returns mutable reference to interpreter result.0CiReturns the tracing types that are configured in the set.00D`Checks if an expression is an ERC20 <code>transfer</code> or \xe2\x80\xa6BkReturns true if the address is a precompile000CjReturns whether the sender is a known L2 system sender \xe2\x80\xa6DkReturns <code>true</code> if the original value is equal to the present \xe2\x80\xa60CjTransform Visitable items to a list of chunks and then \xe2\x80\xa6CfUse a keystore from the default keystores folder (~\xe2\x80\xa600B`The keystore password file path.ChLoad the ABI from the artifact of a locally compiled \xe2\x80\xa6DbGets code hash of <code>address</code> and if the account is cold.BaLoad account code hash, calls \xe2\x80\xa60100AlLoads the account delegated.CmLoads account into memory. If account is EIP-7702 type it \xe2\x80\xa611BaLoad account delegated, calls \xe2\x80\xa60212200AhEvent with signature \xe2\x80\xa600CkMarks that the account(s) should use persistent storage \xe2\x80\xa600000DkSee <code>makePersistent(address)</code>. Container type for the return \xe2\x80\xa600000000000000000DkThe default maximum size to <code>proptest::collection::SizeRange</code>\xe2\x80\xa600DeIn case the user has loaded <em>only</em> one private-key, we can \xe2\x80\xa6ClReverts a call to an address with specified revert data. \xe2\x80\xa600000DhReverts a call to an address with a specific <code>msg.value</code>, \xe2\x80\xa600000ChReverts a call to an address with specified revert data.00000111111AmModifies the context journal.0CdReturns the symbol of the chain\xe2\x80\x99s native currency.CcCreates a new empty account with the given storage.0CiCreates a database with given database and inspector, \xe2\x80\xa6BnReturns a new listeners for ready transactionsBcReturns the next etherscan api key.CcReturns the next <em>mainnet</em> rpc URL in inlineCeContract addresses that have do NOT have fallback \xe2\x80\xa6000BnNormalizes the evm version if a SolcReq is setCeThe original tracer config when the recording starts.CaCalculates the quotient of Euclidean division \xe2\x80\xa60BoOverflowing Euclidean remainder. Calculates \xe2\x80\xa60DfParses a string of JSON data at <code>key</code> and coerces it to \xe2\x80\xa600000000000000000DkParses a string of JSON data at <code>key</code> and coerces it to type \xe2\x80\xa600000111111DfParses a string of TOML data at <code>key</code> and coerces it to \xe2\x80\xa600000000000000000DkParses a string of TOML data at <code>key</code> and coerces it to type \xe2\x80\xa600000111111CkFetches the constructor arguments values and types from \xe2\x80\xa6CkParses the given constructor arguments into a vector of \xe2\x80\xa6CmPauses gas metering (i.e. gas usage is not counted). Noop \xe2\x80\xa600000CkPersists the mapping entry for this contract and writes \xe2\x80\xa6ChPersists results for mutants for given build hash at \xe2\x80\xa6CiThis should ensure the verify request can be prepared \xe2\x80\xa6CmConfigures the API request to the Etherscan API using the \xe2\x80\xa6AfPresent bundle account0CgPrompts the user for hidden uint256 in the terminal \xe2\x80\xa600000AhRead the state snapshot.BnWhether to record immediate bytes for opcodes.BcEnable recording of immediate bytes10110101BmWhether to record individual stack snapshots.00000CaHelper for removing comments before a byte offsetCiRemove any prefix comments that occur before the byte \xe2\x80\xa6CdFails the instruction if the current call is static.0ClReset gas metering (i.e. gas usage is set to gas limit). \xe2\x80\xa600000CjRevokes persistent status from the address, previously \xe2\x80\xa600000DgSee <code>revokePersistent(address)</code>. Function with signature \xe2\x80\xa600000CkSee <code>serializeJson</code>. Function with signature \xe2\x80\xa600000000000000000000000DaSee <code>serializeJson</code>. Container type for the return \xe2\x80\xa600000000000111111CkSign an EIP-7702 authorization for delegation Container \xe2\x80\xa600000CnSign an EIP-7702 authorization for delegation for specific \xe2\x80\xa600000CgSign an EIP-7702 authorization for delegation, with \xe2\x80\xa600000CkDo not check if the contract is already verified before \xe2\x80\xa6CjSplits a mutable bit-slice at an index, without bounds \xe2\x80\xa60CmHas all subsequent calls (at this call depth only) create \xe2\x80\xa600000000000000000CnStart a snapshot capture of the current gas usage by name. \xe2\x80\xa600000CmStart a snapshot capture of the current gas usage by name \xe2\x80\xa600000BdSwitch to a specific foundry versionCcContainer type for the return parameters of the \xe2\x80\xa600BkGenerates a <code>PlainStateReverts</code>.0CmExecute multiple transactions and finalize the state in a \xe2\x80\xa600000CiReturns an iterator over all transactions in the pool \xe2\x80\xa6BiReturns the Treasure Topaz testnet chain.CiSame as <code>setup_forge_remote</code> but not panickingCnTries to write the parameters table to the buffer. Doesn\xe2\x80\x99\xe2\x80\xa60BaUnmark account as locally created0BkEnsures the verify command can be executed.CmSets both the genesis accounts and the signer accounts so \xe2\x80\xa6CgAccepts user-provided code, sig and args params and \xe2\x80\xa6CjReturns a list of styles and the ranges they should be \xe2\x80\xa6DhSets the <code>fork_choice</code> to use to fork off from based on a \xe2\x80\xa6AjSets the genesis timestampBdSets the starting indentation level.00CmMarks the account as self destructed and returns self for \xe2\x80\xa60AjSets the slots in an epochDjWrite chunks separated by a separator. If <code>multiline</code>, each \xe2\x80\xa6BjWrites the object as a pretty JSON object.CkGas cost for accessing a storage key in the access list \xe2\x80\xa60AlVariants of a revm::Database000CjThrown when Blob transaction contains a versioned hash \xe2\x80\xa6CfBlob transaction contains a versioned hash with an \xe2\x80\xa60CdThe contract hash at <code>CHEATCODE_ADDRESS</code>.000BdContractInheritance preprocessor id.0AmBuild a new CallTraceDecoder.000CmAn Iterator over characters and indices in a string slice \xe2\x80\xa6BlRestrictions for compilation of given paths.0BhKeeps data about a contract constructor.CjAn Error which is thrown when interacting with a smart \xe2\x80\xa6CnA simple summary reporter that prints the coverage results \xe2\x80\xa6BnCreate init code size exceeds limit (runtime).BmExceeded contract size limit during creation.10BbEIP-3860: Limit and meter initcodeCkEIP-3860: Limit and meter initcode. Initcode size limit \xe2\x80\xa6CmExceeded init code size limit (EIP-3860:  Limit and meter \xe2\x80\xa6210DkOtterscan\xe2\x80\x99s <code>ots_getApiLevel</code> endpoint Otterscan currently \xe2\x80\xa6BdThe contract source provider for \xe2\x80\xa6DiExtracts the profile from the <code>profile</code> key and sets unset \xe2\x80\xa60CjAt this point we have converted transactions collected \xe2\x80\xa6ChHelps to translate a function enter-exit flow into a \xe2\x80\xa600CjKeeps result of a call to revm EVM used for gas estimationDcEIP-1559: <code>gas_price</code> is less than <code>basefee</code>.0AlThe Hardhat console address.000BmBn128 pair precompile with ISTANBUL gas rules0BcAn error due to invalid transactionBeThe outcome of an invariant fuzz test000CiThis is a helper type to allow for lenient parsing of \xe2\x80\xa6Cithrown if creation transaction provides the init code \xe2\x80\xa6BnIntermediary Anvil representation of a receiptAkMissing target for EIP-4844000AkMissing target for EIP-77020AkMissing target for EIP-78730BhThe cost of a non-zero byte in calldata.0CnThe system address, the sender of the first transaction in \xe2\x80\xa6DeOtterscan\xe2\x80\x99s <code>ots_getBlockTransactions</code> endpoint Gets \xe2\x80\xa6C`Base gas fee for secp256r1 p256verify operation.0ClPAIRING_MULTIPLIER_BASE specifies the slope/gradient for \xe2\x80\xa60CmA filter that combines all command line arguments and the \xe2\x80\xa6CdA regex that matches a basic snapshot entry like \xe2\x80\xa6CfSelfdestruct is called again in one transaction scope.0CjContains required url + api key to set up an etherscan \xe2\x80\xa6CdHelper type alias for a retry provider with a signerAoA builder for RuntimeTransport.CbTransaction identifier of System transaction typesCjSensitive info from the script sequence which is saved \xe2\x80\xa6CkType for Soldeer configs, under dependencies tag in the \xe2\x80\xa6CmWarning: Unused function parameter. Remove or comment out \xe2\x80\xa6BfAdds the given transaction to the poolBgSet the minimum gas price for the node.CjProcesses the authorization list, validating authority \xe2\x80\xa60ClApply EIP-7702 auth list and return number gas refund on \xe2\x80\xa6110CiReturns references to the address and selector of the \xe2\x80\xa60DkCompares two <code>uint256</code> values. Expects difference to be less \xe2\x80\xa600000000000DjCompares two <code>int256</code> values. Expects difference to be less \xe2\x80\xa600000000000DiCompares two <code>uint256</code> values. Expects relative difference \xe2\x80\xa600000000000DkCompares two <code>int256</code> values. Expects relative difference in \xe2\x80\xa600000000000DkAsserts that two <code>uint256</code> values are equal, formatting them \xe2\x80\xa600000000000DjAsserts that two <code>int256</code> values are equal, formatting them \xe2\x80\xa600000000000DgCompares two <code>uint256</code> values. Expects first value to be \xe2\x80\xa600000000000DfCompares two <code>int256</code> values. Expects first value to be \xe2\x80\xa600000000000111111111111000000000000111111111111DkCompares two <code>int256</code> values. Expects first value to be less \xe2\x80\xa600000000000222222222222000000000000AnBit-Slice Pointer Construction0DjThe response for ots_getBlockDetails includes an <code>issuance</code> \xe2\x80\xa6Efconverts the <code>request</code> into a <code>TypedTransactionRequest</code> with \xe2\x80\xa6ClCalls the invariant function and returns call result and \xe2\x80\xa6CnCheck that the existing bindings match the expected abigen \xe2\x80\xa6CjClears targeted contracts created during an invariant run.00EgConverts the data aggregated in the <code>inspector</code> and <code>call</code> to \xe2\x80\xa6BlReturns the traces for the given transactionChReturns traces for the transaction hash for geth\xe2\x80\x99s \xe2\x80\xa6BeCustom decoding for cheatcode inputs.CnHelper function that tries to decode custom error name and \xe2\x80\xa6BgAvailable repositories for benchmarkingDhRemoves the snapshot with the given ID created by <code>snapshot</code>.00000CkCreates the default CREATE2 Contract Deployer for local \xe2\x80\xa600F`Deserialize into <code>U256</code> from either a <code>u64</code> or a <code>U256</code> hex \xe2\x80\xa6CiIf set to <code>true</code>, disables the block gas limitDiDisable the <code>call.gas_limit &lt;= block.gas_limit</code> constraint.AmDisable block gas limit check2AnDisable block gas limit check.CmThere are use cases where it\xe2\x80\x99s allowed to provide a gas \xe2\x80\xa6000BnWhether to disable the block gas limit checks.BgWhether to disable the block gas limit.BjWhether to disable block gas limit checks.0BjDisable EIP-170: Contract code size limit.AiDisables  code size limitCiDisables the contract size limit during script execution.BoDisable recording of individual stack snapshots000ClGenerates a ready-to-sign digest of human-readable typed \xe2\x80\xa600000CiValidates that the minimum gas floor requirements are \xe2\x80\xa60CiEnsures minimum gas floor is spent according to EIP-7623.110C`Enable auto impersonation of accounts on startup0DbEnsures that <code>account</code> is allowed to execute cheatcodes000EaSame as <code>Self::is_foundry_toml</code> but returns an <code>Err</code> if \xe2\x80\xa6000AlSet the next block gas limitCiHelper function to find the storage slot for an ERC20 \xe2\x80\xa6ChFormats a pt::EventDefinition into an inspection messageCgCompares the current Foundry version with the given \xe2\x80\xa600000EhReturns the path to the cache dir of the <code>block</code> on the <code>chain</code>\xe2\x80\xa6CdReturns the path to foundry chain\xe2\x80\x99s cache dir: \xe2\x80\xa6BdCheatcode specification for Foundry.BfAccess an entry by a key and its hash.000FaCreates a <code>Signature</code> from the serialized <code>r</code> and <code>s</code> scalar \xe2\x80\xa60CaRelative percentage to multiply gas estimates by.DeConverts a <code>GenesisAccount</code> to an <code>AccountInfo</code>DfGets the current <code>block.timestamp</code>. You should use this \xe2\x80\xa600000DcReturns the Foundry version. Format: &lt;cargo_version&gt;-+&lt;\xe2\x80\xa600000ChReturns the Function and calldata based on the signatureClTransforms CREATE2 factory call results back into CREATE \xe2\x80\xa6CnDepending on number of satisfied requirements insert given \xe2\x80\xa6CfReturns a mutable instance of the Backend if it is \xe2\x80\xa6CeInsert values from call state changeset into fuzz \xe2\x80\xa6C`This force installs the default crypto provider.CkCauses the next contract creation (via new) to fail and \xe2\x80\xa600000BiCasts frame result to interpreter result.0BiReturns the raw traces of the transaction00CnHelper functions to return canonicalized invariant failure \xe2\x80\xa6CgReturns true if the current function context is the \xe2\x80\xa6BlReturns whether the nonce check is disabled.0000000DaReturns <code>true</code> if a test can be considered successful.00CnCheck if a string is SCREAMING_SNAKE_CASE. Numbers don\xe2\x80\x99t \xe2\x80\xa6B`The keystore password file path.00DhSame as <code>LoadConfig::load_config</code> but does not emit warnings.0EhLoad <code>Config</code> but do not sanitize. See <code>Config::sanitized</code> for \xe2\x80\xa60CnReturns an iterator over all test functions that match the \xe2\x80\xa6B`Returns a new block event streamCnReturns a new block event stream that yields Notifications \xe2\x80\xa6CgCreates new account that is loaded empty from database.0AlLoaded not existing account.0CdReturns an HTTP URL that has access to archive stateClTracks EXTCODESIZE checks that target an address without \xe2\x80\xa6000DfParses a string of JSON data at <code>key</code> and coerces it to \xe2\x80\xa600000000000DfParses a string of TOML data at <code>key</code> and coerces it to \xe2\x80\xa600000000000CmTries to parse the function name from the source code and \xe2\x80\xa6CkHelper function to load failed call sequence from file. \xe2\x80\xa6DgReturns true whether the block predates the fork <em>or</em> is the \xe2\x80\xa6BlThe information of the debug step recording.000000AgRecord memory expansion0BnWhether to record individual memory snapshots.00000BiReturns the remappings from the given varEdReturns all <code>Remapping</code>s contained in the <code>remappings</code> str \xe2\x80\xa6CjRemove any postfix comments that occur before the byte \xe2\x80\xa6ChReplaces account storage without overriding account infoCeCompletely replace an account\xe2\x80\x99s storage without \xe2\x80\xa61000CkRestore the original source contract to the target file \xe2\x80\xa6BdRestrict the buffer to a single lineCkResumes gas metering (i.e. gas usage is counted again). \xe2\x80\xa600000Db<code>revertToAndDelete</code> is being deprecated in favor of \xe2\x80\xa600000BnRevokes cheatcode access for the given account000DfCalled by <code>Handler::run</code> to execute the core handler logic.000D`Untagged serialization/deserialization support for Option&lt;\xe2\x80\xa60CkSee <code>serializeJson</code>. Function with signature \xe2\x80\xa600000000000DaSee <code>serializeJson</code>. Container type for the return \xe2\x80\xa600000000000CfSerializes given DynSolValue into a serde_json::Value.BiSets account info of BundleState reverts.0CmTry to create a string based on a callback. If the string \xe2\x80\xa6CjStop the snapshot capture of the current gas by latest \xe2\x80\xa600000CiStop the snapshot capture of the current gas usage by \xe2\x80\xa600000CnStop the snapshot capture of the current gas usage by name \xe2\x80\xa600000CgReturns the name of the imported item. If struct is \xe2\x80\xa6CaReturns the address and selector of the function.0DkConverts the <code>Uint</code> to a big-endian byte vector with leading \xe2\x80\xa60DfConverts the <code>Uint</code> to a little-endian byte vector with \xe2\x80\xa60CjAccount got touched and before EIP161 state clear this \xe2\x80\xa60CnCalculates initial gas costs based on transaction type and \xe2\x80\xa60BaValidate initial transaction gas.110CbInjects precompiles to <code>anvil</code>\xe2\x80\x99s EVM.BjWrites the deployment table to the buffer.BnBn128 pair precompile with BYZANTIUM gas rules0AmThe proof verification failed000CcHelps collecting transactions from different forks.000BcThe name of the chisel history fileCaGas cost for accessing a cold account (EIP-2929).0AmThe default CREATE2 deployer.0AhDefault create2 deployer11DjSimilar to <code>evm_increaseTime</code> but takes the exact timestamp \xe2\x80\xa6CmGas floor calculated from EIP-7623 Increase calldata cost \xe2\x80\xa60BoReturns the blobs for a given transaction hash.CaStyle of function header in case it doesn\xe2\x80\x99t fit0CnLogged when an error is indicative that the user is trying \xe2\x80\xa6BoThe multiplier for a non zero byte in calldata.0DcOtterscan\xe2\x80\x99s <code>ots_getBlockDetails</code> endpoint Same as \xe2\x80\xa6DhOtterscan\xe2\x80\x99s <code>ots_getInternalOperations</code> endpoint Traces \xe2\x80\xa6ClThe maximum number of bytes we will look at in bytecodes \xe2\x80\xa6CmHolds data about referenced source contracts and bytecode \xe2\x80\xa6ClContainer type for <em>resolved</em> etherscan keys, see \xe2\x80\xa6CjAn inspector that enforces certain rules during script \xe2\x80\xa6000AnAnti-Aliasing Iterator Adapter0CiStops impersonating an account if previously set with \xe2\x80\xa6BnTransaction gas limit is greater than the cap.0DjIf an initial <code>genesis.json</code> was provided, this applies the \xe2\x80\xa6DjAsserts that two <code>uint256</code> values are not equal, formatting \xe2\x80\xa600000000000DiAsserts that two <code>int256</code> values are not equal, formatting \xe2\x80\xa600000000000BdEnsures that the given layout existsCfDesignate the next call as an EIP-7702 transaction \xe2\x80\xa600000ClDesignate the next call as an EIP-7702 transaction, with \xe2\x80\xa600000CcIf set to true will make every account impersonatedClBuild mapping from contract address to its ABI, code and \xe2\x80\xa6CfInitial gas that is deducted for transaction to be \xe2\x80\xa60DhWrites the big-endian representation of the <code>Uint</code> to the \xe2\x80\xa60DkWrites the little-endian representation of the <code>Uint</code> to the \xe2\x80\xa60CiConstruct a new integer from little-endian a slice of \xe2\x80\xa60DkCalculates the smallest value greater than or equal to <code>self</code>\xe2\x80\xa60CnCollects state changes from a StateChangeset and logs into \xe2\x80\xa600BmRestrictions on compilation of certain files.ClCompute the address a contract will be deployed at for a \xe2\x80\xa600000navailable CUPSCjSets the number of assumed available compute units per \xe2\x80\xa6110001BgThe available compute units per second.00CeOnly run tests in contracts that do not match the \xe2\x80\xa600EfCopies <code>count</code> bits from the region starting at <code>src</code> to the \xe2\x80\xa60CfOnly show coverage for files that do not match the \xe2\x80\xa600CfCreates and also selects a new fork with the given \xe2\x80\xa600000000000CmCreates and also selects new fork with the given endpoint \xe2\x80\xa600000BfCustom decoding for cheatcode outputs.CiFetches a function signature given the selector using \xe2\x80\xa60DoRemoves <em>all</em> snapshots previously created by <code>snapshot</code>. \xe2\x80\xa600000DjDeserialize a <code>usize</code> or \xe2\x80\x9cmax\xe2\x80\x9d for <code>usize::MAX</code>.C`Disable recording of individual memory snapshots000DfIf set to <code>true</code>, disables the enforcement of a minimum \xe2\x80\xa6CkDisable the enforcement of a minimum suggested priority \xe2\x80\xa6CkDisable the enforcement of a minimum suggested priority fee2CkGenerates the struct hash of the canonical EIP-712 type \xe2\x80\xa600000000000BkEnables the transaction\xe2\x80\x99s chain ID check.0CiGiven a function and a vector of string arguments, it \xe2\x80\xa6BfThe ABI-encoded constructor arguments.BkReturns error if constructor has arguments.0CfFetches the source code of verified contracts from \xe2\x80\xa6BcWhether to ignore precompile calls.00000DiExpect a call to an address with the specified <code>msg.value</code> \xe2\x80\xa600000CgExpect given number of calls to an address with the \xe2\x80\xa600000CjOnly allows memory writes to offsets [0x00, 0x60) \xe2\x88\xaa [\xe2\x80\xa600000BmFetches the ABI of a contract from Etherscan.CnThe interval at which to check for filters that need to be \xe2\x80\xa6CiFind structs, resolve conflicts, and prepare them for \xe2\x80\xa6DgReturns the path to the cache file of the <code>block</code> on the \xe2\x80\xa6ClReverse lookup to find the hardfork given a chain ID and \xe2\x80\xa6AjRaw Bit-Slice Construction0DjConstructs an exclusive <code>&amp;mut BitSlice</code> over an element \xe2\x80\xa60CjGiven a function and some state, it returns a strategy \xe2\x80\xa6000ClGiven a parameter type and configured fixtures for param \xe2\x80\xa6000CmGenerate a complete markdown table for a single benchmark \xe2\x80\xa6CfHelper function for finding a contract by ContractName0DhGet an array of <code>N</code> key-value pairs by <code>N</code> indices0CbGet the return type of a function call expression.ClHelper function to returns state diffs recorded for each \xe2\x80\xa6CmReturns the remapping for the project\xe2\x80\x99s <em>script</em> \xe2\x80\xa6D`Returns the remapping for the project\xe2\x80\x99s <em>src</em> directoryCjSet data from global memory to local memory. If global \xe2\x80\xa60Cnindependent transactions that can be included directly and \xe2\x80\xa6DhReverses <code>clear_into_snapshot</code> by initializing the db\xe2\x80\x99s \xe2\x80\xa6BnInserts or updates data for multiple addresses000CbInserts or updates data for multiple storage slots000CnInsert values from push bytes into fuzz dictionary. Values \xe2\x80\xa6BoInstall npm dependencies if package.json existsCjConsume reverts and create <code>PlainStateReverts</code>.0ClDoes account have delegate code and delegated account is \xe2\x80\xa60ChKeep the original directory structure collected from \xe2\x80\xa6EbSame as <code>lenient_block_number</code> but requires to be <code>[num; 1]</code>BbContract code size limit override.000BlList the cached data for <code>chain</code>.EfLoad and sanitize the <code>Config</code>, as well as extract <code>EvmOpts</code> \xe2\x80\xa60CmRetrieves the activation block for the specified hardfork \xe2\x80\xa6CjIntroduced in EIP-1159, a Geth-specific and simplified \xe2\x80\xa6AmMaximum priority fee per gas.00000BfReturns the traces for the given blockAbCreates a new log.0CfVery similar to new_selfdestructed but it will add \xe2\x80\xa60BdIncrements the nonce of the account.000000000CnGiven an ETH contract address, returns the tx hash and the \xe2\x80\xa6CnConverts this node into a parity <code>TransactionTrace</code>00DfParses a string of JSON data at <code>key</code> and coerces it to \xe2\x80\xa600000000000DkParses a string of JSON data at <code>key</code> and coerces it to type \xe2\x80\xa600000111111DfParses a string of TOML data at <code>key</code> and coerces it to \xe2\x80\xa600000000000DkParses a string of TOML data at <code>key</code> and coerces it to type \xe2\x80\xa600000111111ChReturns an iterator of characters, indices and their \xe2\x80\xa6DfRecovers an <code>Address</code> from this signature and the given \xe2\x80\xa60CcReturn remaining gas after subtracting 63/64 parts.0CmRender a collection of call traces to a string optionally \xe2\x80\xa600CjRevokes persistent status from the address, previously \xe2\x80\xa600000DfSee <code>revokePersistent(address)</code>. Container type for the \xe2\x80\xa600000BjUpdates the fork to given transaction hash000CnThe executor will return the <em>exact</em> gas value this \xe2\x80\xa6CmRetrieves the activation block for the specified hardfork \xe2\x80\xa6DaSee <code>serializeJson</code>. Container type for the return \xe2\x80\xa600000000000000000000000000000CjSets the interval after which all rpc caches should be \xe2\x80\xa6000CmSets the initial journaled state to use when initializing \xe2\x80\xa6CnSets the exact timestamp to use in the next block Fails if \xe2\x80\xa6CcInsert a list of signed authorizations into the \xe2\x80\xa60BlManually set the gas used of the root trace.000000DgPrints the standard json compiler input if <code>--verify</code> is \xe2\x80\xa6BhPrints the standard json compiler input.BbRaw Bit-Slice Pointer Construction0DeSpawns a new <code>BlockListener</code> task that listens for new \xe2\x80\xa6CnStart a snapshot capture of the current gas usage by name. \xe2\x80\xa600000CmStart a snapshot capture of the current gas usage by name \xe2\x80\xa600000CdStops all safe memory expectation in the current \xe2\x80\xa600000CkStops recording all map SSTOREs for later retrieval and \xe2\x80\xa600000DeIf the status is prefix with <code>-</code>, the submodule is not \xe2\x80\xa6CoConverts our color choice to <code>anstream</code>\xe2\x80\x99s version.C`max number of blocks with transactions in memoryCeNumber of blocks with transactions to keep in memory.11CjUpdate to new state and generate AccountRevert that if \xe2\x80\xa60DkMerges the state of all <code>accounts</code> from the currently active \xe2\x80\xa6CcValidate transaction that has EIP-1559 priority fee0AnWarms the account and storage.00000CmWarm loaded addresses are used to check if loaded address \xe2\x80\xa6000000000DeCreates an empty <code>HashMap</code> with at least the specified \xe2\x80\xa6DfCreate a new map with capacity for <code>n</code> key-value pairs. \xe2\x80\xa6DiCreate a new set with capacity for <code>n</code> elements. (Does not \xe2\x80\xa6DeCreates an empty <code>HashSet</code> with at least the specified \xe2\x80\xa63210EfConstructs a <code>Config</code> only differing from the <code>default()</code> in \xe2\x80\xa600ClProvide transactions that will cause a block to be mined \xe2\x80\xa6AjSets the local identifier.00lBn128 errors000BmList of transactions that can be broadcasted.000CjWarning that contract code size exceeds 24576 bytes (a \xe2\x80\xa6CjHeaders and separator for rendering the deployments table.BdThe transaction request was invalid.BoHolds data about a persisted invariant failure.CiMAP_FP_TO_G1_BASE_GAS_FEE specifies the amount of gas \xe2\x80\xa60CbWarning: Return value of low-level calls not used.BkWhat to do when reverting a state snapshot.0000BcSets the base fee of the next blockCgThis storage represent values that are before block \xe2\x80\xa600000DbHandler for RPC call: <code>anvil_getBlobsByTransactionHash</code>BmReturns the value of mining interval, if set.ChSend transactions impersonating specific account and \xe2\x80\xa6BfSets the ERC20 allowance for a spenderCgSets the mining behavior to interval with the given \xe2\x80\xa6CmRetrieves the activation block for the specified hardfork \xe2\x80\xa6DkCompares two <code>uint256</code> values. Expects difference to be less \xe2\x80\xa600000000000DjCompares two <code>int256</code> values. Expects difference to be less \xe2\x80\xa600000000000DiCompares two <code>uint256</code> values. Expects relative difference \xe2\x80\xa600000000000DkCompares two <code>int256</code> values. Expects relative difference in \xe2\x80\xa600000000000CeCreates all project dirs and ensure they were createdCcInsert a list of signed authorizations into the \xe2\x80\xa60BmReturns true is auto impersonation is enabledDfIf set to true will make the <code>is_impersonated</code> function \xe2\x80\xa6BaDefault blob excess gas and priceBmBlob excess gas and price of the forked blockCnTracks the excess blob gas, and the base fee, for the next \xe2\x80\xa62BoExcess blob gas and blob gasprice. See also \xe2\x80\xa6BaExcess blob gas and blob gasprice01110011CkInternal method to build the folded stack trace without \xe2\x80\xa6ChCalculate the iteration count for the modexp precompile.0CcAll accounts that are allowed to execute cheatcodes000DgCreates a <code>Signed</code> from an absolute value and a negative \xe2\x80\xa60CnReturns the smallest power of two greater than or equal to \xe2\x80\xa60DgClears the foundry cache for <code>chain</code> and <code>block</code>.C`Clears the foundry cache for <code>chain</code>.DbClear the state and move it into a new <code>StateSnapshot</code>.CkIf targets are updatable, collect all contracts created \xe2\x80\xa600CeCollects preprocessor data from referenced contracts.BmCreates a checkpoint of the account creation.CjCreates account or returns false if collision is detected.111011CmValidates and sanitizes user inputs, returning configured \xe2\x80\xa6DhRemoves the snapshot with the given ID created by <code>snapshot</code>.00000BlDisables the transaction\xe2\x80\x99s chain ID check.0BnReturns the current duration since unix epoch.ClGenerates a ready-to-sign digest of human-readable typed \xe2\x80\xa600000CdReturns an error if op-stack deposits are not activeCfReturns the excess blob gas and current blob gas priceCmPrepare an expected anonymous log with (bool checkTopic1, \xe2\x80\xa600000CiSame as the previous method, but also checks supplied \xe2\x80\xa600000CmPrepare an expected anonymous log with all topic and data \xe2\x80\xa600000111111CmExpects an error on next call that starts with the revert \xe2\x80\xa600000CkExpects an error on next call to reverter address, that \xe2\x80\xa600000CgThe journaled_state to use to initialize new forks withAjFormats parser diagnostics0CjReturns true if the current Foundry version is greater \xe2\x80\xa600000CjCreates an Ethereum function from an address and selector.0BmReturns a config for geth\xe2\x80\x99s PrestateTracer.000CeConvert an u64 into an <code>EthereumHardfork</code>.BlInstantiate from a signature and recovery id0CnReturns a listener for pending transactions, yielding full \xe2\x80\xa6BiWhether to include gas reports for tests.CmBased on a given mutation, emit the corresponding mutated \xe2\x80\xa6CjGets the artifact path from code (aka. creation code). \xe2\x80\xa600000BoCalculates the base fee per blob gas. Calls \xe2\x80\xa60BgHelper function to get the API version.ClGet the full forge version details including commit hash \xe2\x80\xa6CnGets the IntermediateContract for a Solidity source string \xe2\x80\xa6BaHelper to deconstruct a statementDjTracks <code>EXTCODESIZE</code> output. If the bytecode size is NOT 0, \xe2\x80\xa6DjA macro to implement converters from a type to <code>Config</code> and \xe2\x80\xa6CjWhether the given address is a copy of an address with \xe2\x80\xa6000BnReturns whether the balance check is disabled.0000000C`Is account loaded as not existing from database.0BaIs account locally selfdestructed0BoCheck if the last indent group is being skippedCjReturns all libraries with applied remappings. Same as \xe2\x80\xa6CbReturns the transaction receipt for the given hashCiCreates a new system transaction with a custom caller \xe2\x80\xa6000ChReturns a websocket URL that has access to archive stateChGiven a transaction hash, returns its raw revert reason.BoIf the trace is a selfdestruct, returns the \xe2\x80\xa600DfParses a string of JSON data at <code>key</code> and coerces it to \xe2\x80\xa600000000000000000DfParses a string of TOML data at <code>key</code> and coerces it to \xe2\x80\xa600000000000000000ChParse all comments to return a list of inline config \xe2\x80\xa6ChRemoves all stored transactions for the given block hashCaRevokes persistent status from the given account.000CmAll expressions within the REPL contract\xe2\x80\x99s run function \xe2\x80\xa6EeRight-pads the given slice at <code>offset</code> with zeroes until <code>len</code>.0DiFills the <code>InvariantExecutor</code> with the artifact identifier \xe2\x80\xa600C`Sends signed transaction, returning its receipt.DaSee <code>serializeJson</code>. Container type for the return \xe2\x80\xa600000000000ChUtility cheatcode to set arbitrary storage for given \xe2\x80\xa600000000000CnConfigure whether the tracer should record steps and state \xe2\x80\xa6000CcManually set the gas limit of the debug root trace.000CkSnapshot capture the gas usage of the last call by name \xe2\x80\xa600000CnSnapshot capture the gas usage of the last call by name in \xe2\x80\xa600000EcBuilds a Solar <code>solar_sema::ParsingContext</code> from <code>BuildOpts</code>.0DeSpawns a new <code>BlockListener</code> task that listens for new \xe2\x80\xa6CiStarts recording all map SSTOREs for later retrieval. \xe2\x80\xa600000CmCreates a journal entry for when a transient storage slot \xe2\x80\xa600000CgGiven Parameters and CallTraceStep, tries to decode \xe2\x80\xa6CiUpdate the configuration file with the metadata. This \xe2\x80\xa6CkValidates the transaction\xe2\x80\x99s validity when it comes to \xe2\x80\xa6CcConfigures the reporter and runs the given closure.AgSets the genesis numberBkSets max number of states to cache on disk.CgSets the signature identifier for events and functions.00AlConvenience function for \xe2\x80\xa6000000DjConstruct a new <code>Uint</code> from a little-endian slice of limbs. \xe2\x80\xa60Cltimeout after which to remove an active filter if it wasn\xe2\x80\xa6ClParameters for a single anticipated revert, to be thrown \xe2\x80\xa6DbBlock <code>blob_gas_price</code> is greater than tx-specified \xe2\x80\xa60AoBn128 affine g failed to create000BdCall not allowed inside static call.D`Invalid <code>CALL</code> with value transfer in static context.10EfThe <code>contract</code> does not exist on the <code>active</code> fork but exist \xe2\x80\xa60000EcRevert if <code>CREATE</code>/<code>CREATE2</code> starts with <code>0xEF00</code>.BiInternal CREATE/CREATE starts with 0xEF0010BgDeposit transaction error post regolithCdExecute a transaction regardless of signature statusClWrapper for building a folded stack trace using EVM call \xe2\x80\xa600CbContracts identified as targets during a fuzz run.00BfInferInlineHyperlinks preprocessor id.0B`Matches start hex and end regex.B`Matches start regex and end hex.CjMAP_FP2_TO_G2_BASE_GAS_FEE specifies the amount of gas \xe2\x80\xa60CbMaximum number of entries in the fee history cacheAnMinimum suggested priority feeChBuilder used for instantiating the multi-contract runnerAoNonce overflows in transaction.0DkOtterscan\xe2\x80\x99s <code>ots_searchTransactionsAfter</code> endpoint Address \xe2\x80\xa6CjWarning: This declaration shadows an existing declaration.C`The cost floor per token as defined by EIP-2028.0AiFirst version of the blobAoVersioned hash version for KZG.10ChAdds the address and fuzzed or excluded functions to \xe2\x80\xa6ClGrants cheat code access for new contracts if the caller \xe2\x80\xa6DjAsserts that two <code>uint256</code> values are not equal, formatting \xe2\x80\xa600000000000DiAsserts that two <code>int256</code> values are not equal, formatting \xe2\x80\xa600000000000BcBenchmark forge build without cacheChReturns the number of uncles in a block with given hash.AlScripting based transactions000000DjCalculates the <code>excess_blob_gas</code> from the parent header\xe2\x80\x99s \xe2\x80\xa6000ClCompute the address a contract will be deployed at for a \xe2\x80\xa600000CbCreates a new fork but does <em>not</em> select it0BkCreates a new fork at the given transaction11CiHelper function that decodes provided error as an ABI \xe2\x80\xa6DoRemoves <em>all</em> snapshots previously created by <code>snapshot</code>. \xe2\x80\xa600000CgDetermines the minimum gas needed for a transaction \xe2\x80\xa6DcEstimates the gas usage of the <code>request</code> with the state.CkReturns the effective balance that is going to be spent \xe2\x80\xa600000CkGiven any solc Version return a Version with build metadataCiReturns true if any contract exceeds the runtime size \xe2\x80\xa6CjOnly allows memory writes to offsets [0x00, 0x60) \xe2\x88\xaa [\xe2\x80\xa600000CiExtends the persistent accounts with the accounts the \xe2\x80\xa6000ChFinds a contract which has the same contract name or \xe2\x80\xa6CjSame as finish_tx_spinner but also prints a message to \xe2\x80\xa6CaGet the content for a single benchmark table cellDjAttempts to get mutable references to <code>N</code> values in the map \xe2\x80\xa60CjReturns the normalized EvmVersion for the current solc \xe2\x80\xa6DgReturns the <code>UiFmt::pretty()</code> formatted attribute of the \xe2\x80\xa6ClReturns the EIP-712 type definition from the bindings in \xe2\x80\xa6BlWhether the call includes a snapshot failureCmReturns whether there was a state snapshot failure in the \xe2\x80\xa6CmFailures occurred in state snapshots are tracked when the \xe2\x80\xa6CmTracks whether there was a failure in a snapshot that was \xe2\x80\xa632103210102ChRetrieves the activation timestamp for the specified \xe2\x80\xa6EhSame as <code>impl_figment_convert</code> but also implies <code>Provider</code> for \xe2\x80\xa6ClWhether the next contract creation should be intercepted \xe2\x80\xa6000000BoReturns whether the base fee check is disabled.0000000CoReturns <code>true</code> if writing state history is supportedClLinks given artifact with either given library addresses \xe2\x80\xa6CnHow many values to record at most. Once the fuzzer exceeds \xe2\x80\xa60DfSame as <code>impl_figment_convert</code> but also merges the type \xe2\x80\xa6DiClones the account data from the <code>active_journaled_state</code>  \xe2\x80\xa6CdCreates an EVM instance with optionally injected \xe2\x80\xa6ClCreates a new EVM with the given inspector and wraps the \xe2\x80\xa6ChGets paginated transaction data for a certain block. \xe2\x80\xa6DiIf the trace is a selfdestruct, returns the <code>Action</code> for a \xe2\x80\xa600DfParses a string of JSON data at <code>key</code> and coerces it to \xe2\x80\xa600000DfParses a string of TOML data at <code>key</code> and coerces it to \xe2\x80\xa600000CcCleans up already loaded accounts that would be \xe2\x80\xa6CkPreserve historical state snapshots when dumping the state.CdThe value of the storage slot before it was changed.000AiHow to keep history stateChRead contract constructor arguments from the given file.0ClRemove any comments that occur before the byte offset in \xe2\x80\xa6CbRemoves persistent status from all given accounts.000CjRevert the state of the EVM to a previous snapshot and \xe2\x80\xa600000BhReverts to previous instruction pointer.0CdHolds the target for the selfdestruct refund target.00BeSets the state snapshot failure flag.000CnSlice of the shared memory buffer returns None if range is \xe2\x80\xa600000DjDetermines whether the <code>DEFAULT_CREATE2_DEPLOYER</code> should be \xe2\x80\xa6000CnChecks if account is empty and check if empty state before \xe2\x80\xa60BkCollects account info of BundleState state.0CkReturns an ordered array of all account accesses from a \xe2\x80\xa600000CdStops all safe memory expectation in the current \xe2\x80\xa600000CkStops recording all map SSTOREs for later retrieval and \xe2\x80\xa600000ClSuppress successful test traces and show only traces for \xe2\x80\xa6ClTakes the next action from the control and returns it as \xe2\x80\xa60EgGenerates a <code>StateChangeset</code> and <code>PlainStateReverts</code> from the \xe2\x80\xa60CnTries to write the properties table to the buffer. Doesn\xe2\x80\x99\xe2\x80\xa6CnMakes sure that the contract exists in the project. If so, \xe2\x80\xa6DhSets the <code>fork_choice</code> to use to fork off from based on a \xe2\x80\xa6BmAdd known contracts to the decoder from a \xe2\x80\xa600CiWork with TracingInspector::set_transaction_gas_limit \xe2\x80\xa6000CiWrites a series of tests to a gas snapshot file after \xe2\x80\xa6FbWrite whitespace separator to the buffer <code>&quot;\\n&quot;</code> if <code>multiline</code> \xe2\x80\xa6CiBounds the amount the base fee can change between blocks.CfA Provider that handles breaking changes in toml filesDiWalks over contract HIR and collects <code>BytecodeDependency</code>s \xe2\x80\xa6CmInitial gas for a Call is bigger than <code>gas_limit</code>.0Dm<code>gas_limit</code> in the tx is bigger than <code>block_gas_limit</code>.0CnAll accounts that will have persistent storage across fork \xe2\x80\xa6CiWarning: Interface functions are implicitly \xe2\x80\x9cvirtual\xe2\x80\x9dB`Missing blob hashes for EIP-48440BeError type for MultiWalletOptsBuilderDdOtterscan\xe2\x80\x99s <code>ots_searchTransactionsBefore</code> endpoint \xe2\x80\xa6BaStatus of selfdestruction revert.0BgSensitive values from script sequences.CnDefines a backwards-compatible enum for transactions. This \xe2\x80\xa6B`State change during static call.BjInvalid state modification in static call.10CkRepresents the result of a single transaction execution \xe2\x80\xa6CjParse an override string in the format address:slot:value.CmUse the create 2 factory in all cases including tests and \xe2\x80\xa60000000000BfRemoves all transactions from the poolCkAsserts that the <code>&lt;root&gt;/out</code> file exists.CiWaits for a transaction to be included in a block and \xe2\x80\xa6AnBit-Slice Pointer Construction0CgTakes a signed transaction and broadcasts it to the \xe2\x80\xa600000CmPerforms a raw call to an account on the current state of \xe2\x80\xa6003CjCompute the address of a contract created with CREATE2 \xe2\x80\xa600000000000CiGiven a function and a vector of string arguments, it \xe2\x80\xa6CmOtterscan currently requires this endpoint, even though it\xe2\x80\xa6CjReturns true if any contract exceeds the initcode size \xe2\x80\xa6CmPrepare an expected anonymous log with (bool checkTopic1, \xe2\x80\xa600000CiSame as the previous method, but also checks supplied \xe2\x80\xa600000CmPrepare an expected anonymous log with all topic and data \xe2\x80\xa600000111111CmExpects an error on next call that starts with the revert \xe2\x80\xa600000CkExpects an error on next call to reverter address, that \xe2\x80\xa600000ClFinds a contract which deployed bytecode exactly matches \xe2\x80\xa6CjReturns true if the current Foundry version is greater \xe2\x80\xa600000ChReturns the path to foundry\xe2\x80\x99s etherscan cache dir: \xe2\x80\xa6CjGiven a function, it returns a proptest strategy which \xe2\x80\xa6000CjGets the artifact path from code (aka. creation code). \xe2\x80\xa600000ChHelper function for extracting contract hash used to \xe2\x80\xa6BoGet max nonce from transaction pool by address.ChSimilar to <code>insert_account</code> but with storage.BoInserts an account with storage into the state.10BcInvalid inline config items parsed.0CfReturns whether the block gas limit check is disabled.CmReturns <code>true</code> if the block gas limit is disabled.11110111CmReturns an iterator over the coverage items and their IDs \xe2\x80\xa600ClReturns all remappings declared in foundry.toml files of \xe2\x80\xa6CcMark account as locally and globally selfdestructed0AlReturns the name of the linkBfReturns all transactions given a blockCdTrace internal ETH transfers, contracts creation \xe2\x80\xa6DfParses a string of JSON data at <code>key</code> and coerces it to \xe2\x80\xa600000000000DfParses a string of TOML data at <code>key</code> and coerces it to \xe2\x80\xa600000000000CkReturns the address of the public DNS node list for the \xe2\x80\xa60CiReturns a list of tuples of submodule paths and their \xe2\x80\xa6BnWhether to record returndata buffer snapshots.00000DjConstruct a new <code>Uint</code> from a little-endian slice of limbs. \xe2\x80\xa60BnWhether to enable script execution protection.ChUtility cheatcode to set arbitrary storage for given \xe2\x80\xa600000000000CfInsert a list of recovered authorizations into the \xe2\x80\xa60CiInserts the given key and value into the map with the \xe2\x80\xa60CkSnapshot capture the gas usage of the last call by name \xe2\x80\xa600000CnSnapshot capture the gas usage of the last call by name in \xe2\x80\xa600000DbBuilds a Solar <code>solar_sema::ParsingContext</code> from a  \xe2\x80\xa60CiStarts recording all map SSTOREs for later retrieval. \xe2\x80\xa600000CjRecord all account accesses as part of CREATE, CALL or \xe2\x80\xa600000BkCollects account info of BundleState state.0DnStrips all <strong>$xxx$</strong> placeholders from the bytecode if it\xe2\x80\x99s \xe2\x80\xa60DfFunction with signature <code>targetArtifactSelectors()</code> and \xe2\x80\xa600CaTransact the system call and commit to the state.00000CnUpdates underlying sequence paths to not be under /dry-run \xe2\x80\xa6ClVisit the yul string with an optional identifier. If the \xe2\x80\xa6BmError on created contract that begins with EFCoCreated contract starts with invalid bytes (<code>0xEF</code>).10BlDefault salt for create2 library deploymentsCjThis declaration has the same name as another declaration.DcSimilar to <code>evm_increaseTime</code> but takes sets a block \xe2\x80\xa6Cjthrown if the transaction sender doesn\xe2\x80\x99t have enough \xe2\x80\xa6Ch<code>ExtDelegateCall</code> calling a non EOF contract.AkInternal to ExtDelegateCall10DfThrown when <code>max_fee_per_blob_gas</code> is not supported for \xe2\x80\xa6Dh<code>max_fee_per_blob_gas</code> is not supported for blocks before \xe2\x80\xa60ClA wrapper for TypedTransaction that allows impersonating \xe2\x80\xa6B`Overflow payment in transaction.0CnWhen using the EIP-1559 fee model introduced in the London \xe2\x80\xa60C`Mapping of fallback standalone sections. See \xe2\x80\xa6CkSensitive values from the transactions in a script sequenceClThe type that can verify a contract on <code>sourcify</code>CkExpects an error on next cheatcode call with any revert \xe2\x80\xa600000ClExpects an error on next cheatcode call that starts with \xe2\x80\xa600000ChExpects an error on next cheatcode call that exactly \xe2\x80\xa600000CcAdditional settings profiles to use when compiling.DbWhether to allow <code>expectRevert</code> for internal functions.ClConfigures this runner with the inline configuration for \xe2\x80\xa60CfInsert a list of recovered authorizations into the \xe2\x80\xa60B`Benchmark forge build with cacheClReturns the number of uncles in a block with given block \xe2\x80\xa6CjBuilds a mainnet EVM instance with the provided inspector.000ClCollect the compilation metadata of the cloned contract. \xe2\x80\xa6CgCollect the metadata of the contract from the block \xe2\x80\xa6CjSets the number of assumed available compute units per \xe2\x80\xa6Direturns the <code>foundry_compilers::ConfigurableArtifacts</code> for \xe2\x80\xa6CiHelper function that will link references in unlinked \xe2\x80\xa6CjWhether to accept invalid certificates for the rpc server.DjSimilar to <code>evm_increaseTime</code> but takes the exact timestamp \xe2\x80\xa6B`Finds abi by name or source pathD`Making sure any implicit profile <code>[name]</code> becomes \xe2\x80\xa6AjRaw Bit-Slice Construction0CmReturns a fee per gas that is an estimate of how much you \xe2\x80\xa6CbGenerate intermediate output for the REPL contractCmGets the map key and parent of a mapping at a given slot, \xe2\x80\xa600000CnReturns the available compute units per second, which will \xe2\x80\xa60DjIf the trace is a selfdestruct, returns the <code>CallFrame</code> for \xe2\x80\xa600ChRetrieves the activation timestamp for the specified \xe2\x80\xa6BmInserts a new cache entry for the given blockBbInstalls all missing dependencies.CaConsumes the bundle state and split it into a \xe2\x80\xa60CeReturns an iterator over all recorded traces  for \xe2\x80\xa600CiReturns whether the minimum suggested priority fee is \xe2\x80\xa6CfWhether the minimum suggested priority fee is enforcedBfContract initcode size limit override.0007AnNormalizes optimizer settings:ClReturns the next account status on touched empty account \xe2\x80\xa60DjConstruct a new <code>Uint</code> from a little-endian slice of limbs. \xe2\x80\xa60CkRecorded account accesses (calls, creates) organized by \xe2\x80\xa6000000CfRecovers an address from the specified message and \xe2\x80\xa6DfRecovers an <code>Address</code> from this signature and the given \xe2\x80\xa60CiGoes over all test/script files and replaces bytecode \xe2\x80\xa6CjRevert the state of the EVM to a previous snapshot and \xe2\x80\xa600000CgSelects senders and contracts based on the contract \xe2\x80\xa600ChRetrieves the activation timestamp for the specified \xe2\x80\xa6CnSets the auto impersonation flag which if set to true will \xe2\x80\xa6CiSets an interval to use when computing the next timestampCiConfigure whether calls to precompiles should be ignored.000BiStyle of single line blocks in statements0CiRecords the debug trace during the run. Function with \xe2\x80\xa600000CkReturns an ordered array of all account accesses from a \xe2\x80\xa600000BhConverts a TransactionRequest into a \xe2\x80\xa6CaWrite all prefix comments before a given locationCmThrown when an access list is used before the berlin hard \xe2\x80\xa6AhEIP-7702 is not enabled.0BaBlake2 wrong final indicator flag000BmThe initcode of the default CREATE2 deployer.000CdMaximum consumable blob gas for data blobs per block000DhExtracts the profile from the <code>profile</code> key and using the \xe2\x80\xa6CjBasic implementation of CheatcodesExecutor that simply \xe2\x80\xa6CnVisitor that detects unchecked ERC20 transfer calls within \xe2\x80\xa6ChRetrieves the activation timestamp for the specified \xe2\x80\xa6CbReturns the blob base fee update fraction from \xe2\x80\xa6CiBlob base fee update fraction. EIP-4844 Blob base fee \xe2\x80\xa60100CgTakes a signed transaction and broadcasts it to the \xe2\x80\xa600000CfReturns the bytecode without placeholders, if present.C`Calculate base fee for next block. EIP-1559 specDkCalls the <code>afterInvariant()</code> function on a contract. Returns \xe2\x80\xa6BcClears the foundry etherscan cache.CjCompute the address of a contract created with CREATE2 \xe2\x80\xa600000000000CjIf the fork choice is a block number, simply return it \xe2\x80\xa6CdExecute a transaction regardless of signature statusCjSets the number of assumed available compute units per \xe2\x80\xa6EcReturns the configured rpc or <code>&quot;http://localhost:8545&quot;</code> if \xe2\x80\xa6CaInserts or updates data for multiple block hashes000ChConsumes the inspector and returns the trace results \xe2\x80\xa600CjAccount is modified but not destroyed. This means that \xe2\x80\xa60CmChecks if a tuple assignment doesn\xe2\x80\x99t properly check the \xe2\x80\xa6CgMarks the account as warm and return true if it was \xe2\x80\xa6CmMarks the storage slot as warm and sets transaction_id to \xe2\x80\xa610CiHow many addresses to record at most. Once the fuzzer \xe2\x80\xa60BfNormalizes optimizer settings. See \xe2\x80\xa6CiReturns the next account status on touched or created \xe2\x80\xa60CgFor simplicity purposes, we return the entire block \xe2\x80\xa6CmAddress history navigation. searches forward from certain \xe2\x80\xa6DdCreates a <code>Signed</code> from a sign and an absolute value. \xe2\x80\xa60BjSets the current blob excess gas and priceDiTakes <code>blob_excess_gas</code> saves it inside env and calculates \xe2\x80\xa60CcSet whether the last indent group should be skippedCnSign an EIP-7702 authorization and designate the next call \xe2\x80\xa600000000000000000CjRecord all account accesses as part of CREATE, CALL or \xe2\x80\xa600000CcContainer type for the return parameters of the \xe2\x80\xa600BfTransact the system call and finalize.00000DcWhether to enable safety checks for <code>vm.getCode</code> and \xe2\x80\xa6BkReturns an uncles at given block and index.BhUnmark account as locally selfdestructed0ChValidates the transaction against a specific account \xe2\x80\xa6CjSets max number of blocks with transactions to keep in \xe2\x80\xa6C`Write a postfix comments before a given locationBlEIP-7702 transaction has invalid fields set.0BmThrown when there\xe2\x80\x99s a blob validation errorBiThe BIP32 default derivation path prefix.ClCreates a filter in the node, to notify when new pending \xe2\x80\xa6CkExpects an error on next cheatcode call with any revert \xe2\x80\xa600000ClExpects an error on next cheatcode call that starts with \xe2\x80\xa600000ChExpects an error on next cheatcode call that exactly \xe2\x80\xa600000CcIf set to true will make every account impersonatedCgCheck if a separated list of chunks will fit on the \xe2\x80\xa6DkCompares two <code>uint256</code> values. Expects difference to be less \xe2\x80\xa600000000000DjCompares two <code>int256</code> values. Expects difference to be less \xe2\x80\xa600000000000DiCompares two <code>uint256</code> values. Expects relative difference \xe2\x80\xa600000000000DkCompares two <code>int256</code> values. Expects relative difference in \xe2\x80\xa600000000000CnFinds abi for contract which has the same contract name or \xe2\x80\xa6DcGenerates random wallets until <code>matcher</code> matches the \xe2\x80\xa6CfHelper function to create the invariant metrics table.CmGets the map key and parent of a mapping at a given slot, \xe2\x80\xa600000CjThe path provided to this function should point to the \xe2\x80\xa6ChCalculates the next block blob excess gas, using the \xe2\x80\xa6CcReturns whether the priority fee check is disabled.0000000BlReturns the traces for the given transactionDjCreates a new instance of a Tester for the <code>broadcast</code> test \xe2\x80\xa6ClCreates a filter in the node, to notify when new pending \xe2\x80\xa6ChCreates revert for states that were before selfdestruct.0CgAddress history navigation. searches backwards from \xe2\x80\xa6AmRemove transactions by senderBeRemove transactions by sender addressBnRetrieves cached results for given build hash.BhThe value transferred on a selfdestruct.00BnSet chain with default RPC URL (similar to \xe2\x80\xa6000BoSets present account info of BundleState state.0CkMap an EthereumHardfork enum into its corresponding SpecId.CgMap an OptimismHardfork enum into its corresponding \xe2\x80\xa6CnRecords the debug trace during the run. Container type for \xe2\x80\xa600000ChBerlin warm and cold storage access cost for account \xe2\x80\xa60DfCreates a new <code>watchexec::Config</code> with a custom command \xe2\x80\xa6DkThrown when we receive a tx with <code>blob_versioned_hashes</code> and \xe2\x80\xa6Ed<code>blob_hashes</code>/<code>blob_versioned_hashes</code> is not supported for \xe2\x80\xa60CnLibraries\xe2\x80\x99 runtime code always starts with the following \xe2\x80\xa6DcRemoves a <code>anvil_setBlockTimestampInterval</code> if it existsBaMissing priority fee for EIP-15590BiThe warning message for nightly versions.ClReturns the number of transactions in a block with given \xe2\x80\xa6CfInitial gas that is deducted for transaction to be \xe2\x80\xa60BfIncrements the balance of the account.BhAdd journal entry for caller accounting.111011CnHelper method to convert ArtifactId to the format in which \xe2\x80\xa6CnDeserialize stringified percent. The value must be between \xe2\x80\xa6CdReturns the target artifact given the path and name.CdGenerate intermediate contracts for all contract \xe2\x80\xa6AgGet chain data by alias000BlGet the call inputs for the CREATE2 factory.DdSame as <code>Self::get_etherscan_config()</code> but optionally \xe2\x80\xa6CjGets memory input and output ranges for call instructions.0BjCalculates the base fee for the next blockBfRun inspection without catching error.000BaRemoves the interval if it existsC`Sets original account info of BundleState state.0CnSign an EIP-7702 authorization and designate the next call \xe2\x80\xa600000000000000000BkReturns an uncles at given block and index.CiUpdates memory limits that should be more strict when \xe2\x80\xa6DcThis modifies the <code>limit</code> what to keep stored in memory.ChValidates caller account nonce and code according to \xe2\x80\xa60CmThe assumed block time for unknown chains. We assume that \xe2\x80\xa6AmMax number of blobs per block000CgThe cost of a non-zero byte in calldata adjusted by \xe2\x80\xa60ClTarget consumable blob gas for data blobs per block (for \xe2\x80\xa6000CfHandler for RPC call: <code>anvil_getBlobByHash</code>CiStops impersonating an account if previously set with \xe2\x80\xa6DkCompares two <code>uint256</code> values. Expects difference to be less \xe2\x80\xa600000000000DjCompares two <code>int256</code> values. Expects difference to be less \xe2\x80\xa600000000000DiCompares two <code>uint256</code> values. Expects relative difference \xe2\x80\xa600000000000DkCompares two <code>int256</code> values. Expects relative difference in \xe2\x80\xa600000000000BkIn Vec&lt;(address, expected increment)&gt;CmReturns a tuple of mutable references to the context, the \xe2\x80\xa60BdDisable the default CREATE2 deployerBdDisable the default create2 deployer1DnConvert a <code>BlockNumberOrTag</code> into an <code>EthereumHardfork</code>.BhSets an interval for the block timestampCmFinds an ArtifactId object in the given ArtifactContracts \xe2\x80\xa6CiReturn the flag whether the attempt should be made to \xe2\x80\xa6ClSpawns a new task that listens for new blocks and resets \xe2\x80\xa60CmSystem call is a special transaction call that is used to \xe2\x80\xa600000CiThis updates the currently used env with the fork\xe2\x80\x99s \xe2\x80\xa6CmStarts the thread that will take transitions and do merge \xe2\x80\xa60BnThe hash of the default CREATE2 deployer code.000CiThe address that deploys the default CREATE2 deployer \xe2\x80\xa6000CnThe multiplier for a non zero byte in calldata adjusted by \xe2\x80\xa60DjOtterscan\xe2\x80\x99s <code>ots_getTransactionBySenderAndNonce</code> endpoint \xe2\x80\xa6CjWarning: Visibility for constructor is ignored. If you \xe2\x80\xa6CmAdjusts the EVM data for the inner EVM context. Should be \xe2\x80\xa6CmRetrieves the activation block for the specified hardfork \xe2\x80\xa6ClReturns the number of transactions in a block with given \xe2\x80\xa6BcCreates and also selects a new fork0CkCreates and then also selects the new fork at the given \xe2\x80\xa611CkReturns the path to foundry\xe2\x80\x99s etherscan cache dir for \xe2\x80\xa6CkGets the artifact path from deployed code (aka. runtime \xe2\x80\xa600000CiDerive the blob base fee update fraction based on the \xe2\x80\xa6000CnReturns all recorded traces for <code>trace_transaction</code>00BgMissing authorization list for EIP-77020CmHelper type to carry a transaction along with an optional \xe2\x80\xa6Bfadditional validation against hardforkCnFetches the creation code of a contract from Etherscan and \xe2\x80\xa6CgWhether the error is potentially caused by the user \xe2\x80\xa6000ClWhether the given slot of address with arbitrary storage \xe2\x80\xa6000CkSame as StructToWrite::struct_or_contract_name but with \xe2\x80\xa6BcTarget number of the blob per block000CjClears the foundry etherscan cache for <code>chain</code>.BhSets an interval for the block timestamp<<<<<<DkSame as <code>LoadConfig::load_config_unsanitized</code> but also emits \xe2\x80\xa60CjRemoves all stored transactions for the given block numberCbReturns transaction at given block hash and index.CfControls the maximum rate of change for blob gas price000DeConsumes <code>TransitionState</code> by applying the changes and \xe2\x80\xa60DjSame as <code>Self::ensure_cheatcode_access()</code> but only enforces \xe2\x80\xa6000CfFetches the source code of verified contracts from \xe2\x80\xa6CfCalculates the next block blob base fee, using the \xe2\x80\xa6DfSame as <code>LoadConfig::load_config_and_evm_opts</code> but also \xe2\x80\xa60CmStop debug trace recording and returns the recorded debug \xe2\x80\xa600000CjWarning after shanghai if init code size exceeds 49152 \xe2\x80\xa6CaThe runtime code of the default CREATE2 deployer.000CiThe factor to scale the block time by to get the poll \xe2\x80\xa6BdSets the base fee of the next block.ChRetrieves the activation timestamp for the specified \xe2\x80\xa6CkIs account loaded as not existing from database and not \xe2\x80\xa60CdReturns transaction by given block number and index.CdSets whether to disable the default create2 deployerClWarning that Function state mutability can be restricted \xe2\x80\xa6CjReturns the deployed bytecode without placeholders, if \xe2\x80\xa6CeReturns an iterator over all recorded traces  for \xe2\x80\xa600;;;;;;CnGiven a sender address and a nonce, returns the tx hash or \xe2\x80\xa6CnReturns EIP-2718 encoded raw transaction by block hash and \xe2\x80\xa6DgCalls <code>SystemCallCommitEvm::transact_system_call_commit</code> \xe2\x80\xa600000CnDeducts maximum possible fee and transfer value from caller\xe2\x80\xa60CmValidates caller state and deducts transaction costs from \xe2\x80\xa6110ClReturns EIP-2718 encoded raw transaction by block number \xe2\x80\xa6DjCalls <code>SystemCallEvm::transact_system_call_with_caller</code> and \xe2\x80\xa600000CnDepending on the configured chain id and block number this \xe2\x80\xa6000CfReturns the block numbers required for replaying a \xe2\x80\xa6CjIf provided, the private key will be derived using the \xe2\x80\xa6CjReturns the blob base fee update fraction based on the \xe2\x80\xa6000")